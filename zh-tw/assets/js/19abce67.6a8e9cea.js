"use strict";(self.webpackChunkbenson_doc=self.webpackChunkbenson_doc||[]).push([[8940],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>p});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(r),h=s,p=m["".concat(o,".").concat(h)]||m[h]||d[h]||l;return r?n.createElement(p,a(a({ref:t},c),{},{components:r})):n.createElement(p,a({ref:t},c))}));function p(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var l=r.length,a=new Array(l);a[0]=h;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[m]="string"==typeof e?e:s,a[1]=i;for(var u=2;u<l;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},977:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=r(7462),s=(r(7294),r(3905));const l={sidebar_position:1,sidebar_label:"[Chat System] Requirements",title:"[Chat System] Requirements",tags:["Chat System","Architecture"]},a=void 0,i={unversionedId:"Plan/chat-system-requirements",id:"Plan/chat-system-requirements",title:"[Chat System] Requirements",description:"Please design a chat system like following video:",source:"@site/docs/Plan/chat-system-requirements.mdx",sourceDirName:"Plan",slug:"/Plan/chat-system-requirements",permalink:"/zh-tw/docs/Plan/chat-system-requirements",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Plan/chat-system-requirements.mdx",tags:[{label:"Chat System",permalink:"/zh-tw/docs/tags/chat-system"},{label:"Architecture",permalink:"/zh-tw/docs/tags/architecture"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"[Chat System] Requirements",title:"[Chat System] Requirements",tags:["Chat System","Architecture"]},sidebar:"tutorialSidebar",previous:{title:"[Chat System] Requirements",permalink:"/zh-tw/docs/Plan/chat-system-data-structure-and-interface"},next:{title:"[Chat System] Architecture - High Level Design",permalink:"/zh-tw/docs/Plan/chat-system-architecture-high-level-design"}},o={},u=[{value:"Requirements",id:"requirements",level:2}],c={toc:u},m="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Please design a chat system like following video:"),(0,s.kt)("video",{controls:!0,width:"700px",height:"490px",src:"https://github.com/user-attachments/assets/8316b8db-1616-4842-b5e2-182e083446c1",alt:"Chat System Functional Requirements"}),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"requirements"},"Requirements"),(0,s.kt)("p",null,"As the candidate, it is important to understand the functional (basic) requirements first."),(0,s.kt)("p",null,"Here are some questions we can ask the interviewer to clarify the requirements:"),(0,s.kt)("table",null,(0,s.kt)("tr",null,(0,s.kt)("td",null,"\ud83e\uddd1\u200d\ud83c\udf93 Candidate"),(0,s.kt)("td",null,"\ud83e\uddd1\u200d\ud83c\udfeb Interviewer")),(0,s.kt)("tr",null,(0,s.kt)("td",null,(0,s.kt)("b",null,"What are the core functionalities needed?")),(0,s.kt)("td",null,(0,s.kt)("ul",null,(0,s.kt)("li",null,"Sending a message to a user."),(0,s.kt)("li",null,"Getting user's chat room list."),(0,s.kt)("li",null,"Receiving messages from a user."),(0,s.kt)("li",null,"See one's chat history with a user.")))),(0,s.kt)("tr",null,(0,s.kt)("td",null,(0,s.kt)("b",null,"Is the message receiving real-time?")),(0,s.kt)("td",null,"Yes, users should receive messages in real-time, as fast as possible without having to refresh the page")),(0,s.kt)("tr",null,(0,s.kt)("td",null,(0,s.kt)("b",null,"What kind of message formats should be supported?")),(0,s.kt)("td",null,"Let's support formats text at first. We can discuss supporting emojis, images if there's time.")),(0,s.kt)("tr",null,(0,s.kt)("td",null,(0,s.kt)("b",null,"What kind of chat app shall we design? 1 on 1 or group based?")),(0,s.kt)("td",null,"It should support both 1 on 1 and group chat.")),(0,s.kt)("tr",null,(0,s.kt)("td",null,(0,s.kt)("b",null,"Is there a message size limit?")),(0,s.kt)("td",null,"Yes, text length should be less than 100,000 characters long.")),(0,s.kt)("tr",null,(0,s.kt)("td",null,(0,s.kt)("b",null,"How long shall we store the chat history?")),(0,s.kt)("td",null,"Forever.")),(0,s.kt)("tr",null,(0,s.kt)("td",null,(0,s.kt)("b",null,"Should the messages be updated in real-time?")),(0,s.kt)("td",null,"Yes, users should see the messages in real-time."))),(0,s.kt)("br",null),(0,s.kt)("br",null))}d.isMDXComponent=!0}}]);