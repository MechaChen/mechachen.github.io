"use strict";(self.webpackChunkbenson_doc=self.webpackChunkbenson_doc||[]).push([[5531],{5126:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(5893),a=t(3905);const i={sidebar_position:0,sidebar__label:"[Unit Test] 2.2 - \u5229\u7528 immer.js \u8f15\u9b06\u5efa\u7acb mock data",title:"[Unit Test] 2.2 - \u5229\u7528 immer.js \u8f15\u9b06\u5efa\u7acb mock data"},s=void 0,o={id:"Testing/frontend-unit-testing-2.2-mock-data-with-immerjs",title:"[Unit Test] 2.2 - \u5229\u7528 immer.js \u8f15\u9b06\u5efa\u7acb mock data",description:"\u524d\u8a00",source:"@site/docs/Testing/frontend-unit-testing-2.2-mock-data-with-immerjs.mdx",sourceDirName:"Testing",slug:"/Testing/frontend-unit-testing-2.2-mock-data-with-immerjs",permalink:"/zh-tw/docs/Testing/frontend-unit-testing-2.2-mock-data-with-immerjs",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Testing/frontend-unit-testing-2.2-mock-data-with-immerjs.mdx",tags:[],version:"current",lastUpdatedAt:1698939206,formattedLastUpdatedAt:"2023\u5e7411\u67082\u65e5",sidebarPosition:0,frontMatter:{sidebar_position:0,sidebar__label:"[Unit Test] 2.2 - \u5229\u7528 immer.js \u8f15\u9b06\u5efa\u7acb mock data",title:"[Unit Test] 2.2 - \u5229\u7528 immer.js \u8f15\u9b06\u5efa\u7acb mock data"},sidebar:"tutorialSidebar",previous:{title:"[Unit Test] 2.1 - \u8207 Provider \u7684\u6e2c\u8a66",permalink:"/zh-tw/docs/Testing/frontend-unit-testing-2.1-with-provider"},next:{title:"[Unit Test] 3.1 - \u8207 api \u7684\u6e2c\u8a66",permalink:"/zh-tw/docs/Testing/frontend-unit-testing-3.1-test-with-api"}},c={},d=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"<code>immer.js</code>",id:"immerjs",level:2},{value:"Testing mock data",id:"testing-mock-data",level:2},{value:"mock redux data",id:"mock-redux-data",level:3},{value:"mock api response",id:"mock-api-response",level:3},{value:"\u4eca\u5929\u5c0f\u7d50",id:"\u4eca\u5929\u5c0f\u7d50",level:2},{value:"\u53c3\u8003\u8cc7\u6e90",id:"\u53c3\u8003\u8cc7\u6e90",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\u524d\u8a00",children:"\u524d\u8a00"}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u6211\u5011\u505a\u6e2c\u8a66\u7684\u6642\u5019\uff0c\u5e38\u5e38\u6703\u9700\u8981\u5047\u8cc7\u6599\u4f86\u5e6b\u6211\u5011\u6a21\u64ec\u771f\u5be6\u7684\u60c5\u5883\uff0c\u4e5f\u5c31\u662f mock data\uff0c\u50cf\u662f"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"mock redux state"}),"\n",(0,r.jsx)(n.li,{children:"mock api response"}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"\u7b49\u7b49\u60c5\u5883\uff0c\u800c\u9019\u4e9b\u60c5\u5883\uff0c\u9700\u8981\u6a21\u64ec\u7684 mock data \u901a\u5e38\u6703\u5f88\u9f90\u5927\uff0c\u5149\u662f\u8981\u5ba3\u544a\u4e00\u500b\u5047\u8cc7\u6599\u5c31\u8981\u8017\u8cbb\u975e\u5e38\u591a\u7684\u6642\u9593\u548c\u7cbe\u795e\uff0c\u800c\u4e14\u518d\u52a0\u4e0a\u6211\u5011\u5e38\u5e38\u6703\u9700\u8981\u5927\u9ad4\u4e0a\u4e00\u6a23\u7684 mock data\uff0c\u53ea\u9700\u8981\u4fee\u6539 1, 2 \u500b key pair\uff0c\u9019\u662f\u5f8c\uff0c\u5c31\u7b97\u53ef\u4ee5\u5229\u7528\u8907\u88fd\u8cbc\u4e0a\u7684\u65b9\u6cd5\u53bb\u4fee\u6539\uff0c\u56de\u982d\u518d\u56de\u4f86\u7dad\u8b77\u6642\uff0c\u537b\u4e5f\u96e3\u4ee5\u95b1\u8b80\u548c\u4fee\u6539"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["\u9019\u6642\uff0c\u6211\u5c31\u7a81\u7136\u60f3\u5230\u4e4b\u524d\u6709\u770b\u5230 redux \u5229\u7528 ",(0,r.jsx)(n.code,{children:"immer.js"})," \u6210\u529f\u89e3\u6c7a\u9019\u554f\u984c\uff0cRedux toolkit \u7684\u767c\u660e\u771f\u7684\u662f\u6211\u7684 life saver\uff0c\u8b93\u6211\u4f7f\u7528 Redux \u958b\u767c\u6642\u5927\u5927\u6e1b\u5c11\u958b\u767c\u7684\u6642\u9593\u6210\u672c\uff0c\u611f\u8b1d Redux toolkit \u500b\u767c\u660e\u8005 ",(0,r.jsx)(n.a,{href:"https://github.com/markerikson",children:"Mark Erikson"})," \ud83e\udd70\ud83e\udd70"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u5011\u5c31\u4f86\u7c21\u4ecb\u4e00\u4e0b ",(0,r.jsx)(n.code,{children:"immer.js"})," \u5427"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"immerjs",children:(0,r.jsx)(n.code,{children:"immer.js"})}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u57fa\u65bc\u597d\u5947\u5fc3\u4e5f\u7a0d\u5fae\u4e86\u89e3\u4e86\u4e00\u4e0b ",(0,r.jsx)(n.code,{children:"immer.js"})," \u662f\u4ec0\u9ebc\uff0c\u539f\u4f86\u9019\u5957\u4ef6\u53ef\u4ee5\u8b93\u6211\u5011\u53ef\u4ee5\u66f4\u8f15\u9b06\u7684\u8907\u88fd\u540c\u6642\u6539\u5beb immutable data\uff0c\u800c\u4e14\u662f\u7528 mutable \u7684\u65b9\u5f0f\u64b0\u5beb\uff0c\u5b98\u7db2\u7684\u7bc4\u4f8b\u5982\u4e0b\uff1a"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u7576\u6c92\u6709\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"immer.js"})," \u6642\uff1a"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const nextState = baseState.slice() // shallow clone the array\nnextState[1] = {\n    // replace element 1...\n    ...nextState[1], // with a shallow clone of element 1\n    done: true // ...combined with the desired update\n}\n// since nextState was freshly cloned, using push is safe here,\n// but doing the same thing at any arbitrary time in the future would\n// violate the immutability principles and introduce a bug!\nnextState.push({title: "Tweet about it"})\n'})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u7576\u6709 ",(0,r.jsx)(n.code,{children:"immer.js"})," \u6642\uff1a"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import {produce} from "immer"\n\nconst nextState = produce(baseState, draft => {\n    draft[1].done = true\n    draft.push({title: "Tweet about it"})\n})\n'})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"produce"})," function\uff0c\u50b3\u5165\u4e00\u500b callback\uff0c\u7136\u5f8c\u7528\u985e\u4f3c\u76f4\u63a5\u6539\u5beb\u539f array or object \u7684\u65b9\u5f0f\uff0c\u5b8c\u6210\u6211\u5011\u4e4b\u524d\u5728 redux \u64b0\u5beb reducer \u7684\u8907\u96dc\u64cd\u4f5c!!!"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\n\nexport type CounterStateT = {\n  account: {\n      company: {\n          name: string,\n      }\n  }\n}\n\nconst initialState: AccountStateT = {\n  account: {\n      company: {\n          name: '',\n      }\n  }\n  value: 0,\n}\n\nexport const accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    setCompanyName: (state, action: PayloadAction<string>) => {\n      state.account.company.name = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setCompanyName } = accountSlice.actions\n\nexport default accountSlice.reducer\n"})}),"\n",(0,r.jsxs)(n.p,{children:["(\u66f4\u8a73\u7d30\u7684\u6559\u5b78\u8acb\u898b",(0,r.jsx)(n.a,{href:"https://redux-toolkit.js.org/tutorials/quick-start",children:"\u5b98\u7db2"}),")"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"\u6709\u4e86\u9019\u9805\u5229\u5668\u5f8c\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u975e\u5e38\u5feb\u901f\u7684\u7522\u751f\u8907\u96dc\u7684 mock data\uff0c\u5982\u4e0b\u9762\u4f8b\u5b50"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"testing-mock-data",children:"Testing mock data"}),"\n",(0,r.jsx)(n.h3,{id:"mock-redux-data",children:"mock redux data"}),"\n",(0,r.jsx)(n.p,{children:"\u4ee5\u4e0b\u662f\u6211\u5229\u7528 immer.js \u64b0\u5beb\u7684\u7522\u751f mock redux data \u7684 api"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import produce from 'immer';\n\nimport { RootState } from '@/redux/store';\n\ntype MockStoreFnT = (store: RootState) => void;\n\nconst setupStore = (mockReduxState?: PreloadedState<RootState>) => (\n  configureStore({\n    reducer: rootReducer,\n    preloadedState: mockReduxState,\n  })\n);\n\n/**\n * Generate mock redux state for unit testing.\n *\n * @param  {MockStoreFnT} mockStoreFn - a callback function which\n *   accepts redux initial state as param,\n *   and use immer.js to get revised redux state\n *\n * @return {RootState} new updated redux state instance\n *\n * @example\n * // gen mock redux state with user email\n * const mockReduxState = genMockReduxState((state) => {\n *    state.account.profile.email = 'test@testdomain.com';\n * })\n */\n\nconst genMockReduxState = (mockStoreFn: MockStoreFnT) => {\n  // every time will be new redux state instance\n  const initialState = setupStore().getState();\n  const mockReduxState = produce(initialState, mockStoreFn);\n  return mockReduxState;\n};\n\nexport default genMockReduxState;\n\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u5011\u5c31\u53ef\u4ee5\u5229\u7528 ",(0,r.jsx)(n.code,{children:"genMockReduxstate"})," \u5feb\u901f\u7c21\u6f54\u7684\u7522\u751f redux state"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const mockReduxState: AccountStateT = genMockReduxState((state) => {\n    state.account.company.name = 'mock company name';\n});\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"\u9019\u6a23\u662f\u4e0d\u662f\u6bd4\u4e0a\u8ff0\u7c21\u55ae\u7684\u975e\u5e38\u591a\u5462 \ud83d\ude1a\ud83d\ude1a"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"mock-api-response",children:"mock api response"}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u5011\u4e5f\u53ef\u4ee5\u5229\u7528 ",(0,r.jsx)(n.code,{children:"immer.js"})," \u4f86\u7522\u751f mock api response"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import produce from 'immer';\n\nconst noReviseFn = () => {};\n\n/**\n * Generate a function which generates mock api response for unit testing,\n * and we can pass function to update mock api response.\n *\n * @param  {ApiResT} defaultMockRes - default api return response\n *\n * @return a function which generate specific api default response by default,\n * and revised api response when we revise some property\n */\n\nexport default function genMockApiResFactory<ApiExampleResT>(\n  defaultMockRes: ApiExampleResT,\n) {\n  return function genMockApiRes(reviseFn: (res: ApiExampleResT) => void = noReviseFn) {\n    return produce(defaultMockRes, reviseFn);\n  };\n}\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"type ApiExampleResT = {\n   prop1: type1,\n   prop2: type2,\n   prop3: type3,\n}\n \nconst defaultMockApiExampleRes: ApiExampleResT = {\n  prop1: 'value1',\n  prop2: 'value2',\n  prop3: 'value3',\n}\n\nconst genApiExampleRes = genMockApiResFactory<ApiExampleResT>(\n  defaultMockApiExampleRes,\n);\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"\u6703\u5927\u5927\u6e1b\u5c11\u6211\u5011\u64b0\u5beb\u6e2c\u8a66\u7a0b\u5f0f\u78bc\u7684\u6642\u9593"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"\u4eca\u5929\u5c0f\u7d50",children:"\u4eca\u5929\u5c0f\u7d50"}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u5011\u53ef\u4ee5\u5229\u7528 Redux toolkit \u80cc\u5f8c\u5be6\u73fe\u7684 ",(0,r.jsx)(n.code,{children:"immer.js"})," \u5957\u4ef6\uff0c\u5e6b\u6211\u5011\u5feb\u901f\u5efa\u7acb\u6e2c\u8a66\u7528\u7684 mock redux state, mock api response\uff0c\u8b93\u6211\u5011\u958b\u767c or \u7dad\u8b77\u6e2c\u8a66\u7a0b\u5f0f\u78bc\u66f4\u52a0\u7684\u8f15\u9b06"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"\u53c3\u8003\u8cc7\u6e90",children:"\u53c3\u8003\u8cc7\u6e90"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://immerjs.github.io/immer/",children:"immer.js"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://redux-toolkit.js.org/tutorials/quick-start",children:"Redux toolkit"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},3905:(e,n,t)=>{t.d(n,{ah:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),d=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=d(t),m=a,x=p["".concat(c,".").concat(m)]||p[m]||l[m]||i;return t?r.createElement(x,s(s({ref:n},u),{},{components:t})):r.createElement(x,s({ref:n},u))}));u.displayName="MDXCreateElement"}}]);