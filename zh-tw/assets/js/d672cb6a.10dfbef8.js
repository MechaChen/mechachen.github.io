"use strict";(self.webpackChunkbenson_doc=self.webpackChunkbenson_doc||[]).push([[8120],{3905:(t,n,e)=>{e.d(n,{Zo:()=>k,kt:()=>c});var l=e(7294);function i(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function o(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,l)}return e}function r(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?o(Object(e),!0).forEach((function(n){i(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function a(t,n){if(null==t)return{};var e,l,i=function(t,n){if(null==t)return{};var e,l,i={},o=Object.keys(t);for(l=0;l<o.length;l++)e=o[l],n.indexOf(e)>=0||(i[e]=t[e]);return i}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(l=0;l<o.length;l++)e=o[l],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(i[e]=t[e])}return i}var u=l.createContext({}),d=function(t){var n=l.useContext(u),e=n;return t&&(e="function"==typeof t?t(n):r(r({},n),t)),e},k=function(t){var n=d(t.components);return l.createElement(u.Provider,{value:n},t.children)},p="mdxType",s={inlineCode:"code",wrapper:function(t){var n=t.children;return l.createElement(l.Fragment,{},n)}},m=l.forwardRef((function(t,n){var e=t.components,i=t.mdxType,o=t.originalType,u=t.parentName,k=a(t,["components","mdxType","originalType","parentName"]),p=d(e),m=i,c=p["".concat(u,".").concat(m)]||p[m]||s[m]||o;return e?l.createElement(c,r(r({ref:n},k),{},{components:e})):l.createElement(c,r({ref:n},k))}));function c(t,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof t||i){var o=e.length,r=new Array(o);r[0]=m;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=t,a[p]="string"==typeof t?t:i,r[1]=a;for(var d=2;d<o;d++)r[d]=e[d];return l.createElement.apply(null,r)}return l.createElement.apply(null,e)}m.displayName="MDXCreateElement"},8820:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>s,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var l=e(7462),i=(e(7294),e(3905));const o={sidebar__label:"[Graph] 4. Disjoint Set (Union & Find)",title:"[Graph] 4. Disjoint Set (Union & Find)"},r=void 0,a={unversionedId:"Code/graph-4-disjoint-set",id:"Code/graph-4-disjoint-set",title:"[Graph] 4. Disjoint Set (Union & Find)",description:"\u4ec0\u9ebc\u662f Disjoint Set? \u70ba\u4ec0\u9ebc\u9700\u8981 Disjoint Set\uff1f",source:"@site/docs/Code/graph-4-disjoint-set.mdx",sourceDirName:"Code",slug:"/Code/graph-4-disjoint-set",permalink:"/zh-tw/docs/Code/graph-4-disjoint-set",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Code/graph-4-disjoint-set.mdx",tags:[],version:"current",frontMatter:{sidebar__label:"[Graph] 4. Disjoint Set (Union & Find)",title:"[Graph] 4. Disjoint Set (Union & Find)"},sidebar:"tutorialSidebar",previous:{title:"[Graph] 3. Graph traversal - DFS & BFS",permalink:"/zh-tw/docs/Code/graph-3-traversal"},next:{title:"[LeetCode] \u4ec0\u9ebc\u662f Heap?",permalink:"/zh-tw/docs/Code/heap"}},u={},d=[{value:"\u4ec0\u9ebc\u662f Disjoint Set? \u70ba\u4ec0\u9ebc\u9700\u8981 Disjoint Set\uff1f",id:"\u4ec0\u9ebc\u662f-disjoint-set-\u70ba\u4ec0\u9ebc\u9700\u8981-disjoint-set",level:2},{value:"\u76f8\u95dc\u8853\u8a9e",id:"\u76f8\u95dc\u8853\u8a9e",level:2},{value:"Disjoint Set \u7684\u904b\u4f5c\u6d41\u7a0b",id:"disjoint-set-\u7684\u904b\u4f5c\u6d41\u7a0b",level:2},{value:"\u8cc7\u6599\u7d50\u69cb\u7684\u904b\u4f5c",id:"\u8cc7\u6599\u7d50\u69cb\u7684\u904b\u4f5c",level:3},{value:"\u91cd\u8981 functions",id:"\u91cd\u8981-functions",level:3},{value:"\u5169\u7a2e\u5be6\u4f5c\u6a21\u5f0f",id:"\u5169\u7a2e\u5be6\u4f5c\u6a21\u5f0f",level:3},{value:"Quick Find",id:"quick-find",level:2},{value:"JavaScript \u5be6\u4f5c",id:"javascript-\u5be6\u4f5c",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Quick Union",id:"quick-union",level:2},{value:"JavaScript \u5be6\u4f5c",id:"javascript-\u5be6\u4f5c-1",level:3},{value:"Complexity",id:"complexity-1",level:3},{value:"Quick Union vs Quick Find",id:"quick-union-vs-quick-find",level:3},{value:"Quick Union Optimizations",id:"quick-union-optimizations",level:2},{value:"Union by Rank",id:"union-by-rank",level:3},{value:"JavaScript \u5be6\u4f5c",id:"javascript-\u5be6\u4f5c-2",level:4},{value:"Complexity",id:"complexity-2",level:4},{value:"Path Compression",id:"path-compression",level:3},{value:"JavaScript \u5be6\u4f5c",id:"javascript-\u5be6\u4f5c-3",level:3},{value:"Complexity",id:"complexity-3",level:4},{value:"\u512a\u5316\u5b8c\u7684 Quick Union",id:"\u512a\u5316\u5b8c\u7684-quick-union",level:2},{value:"JavaScript \u5be6\u4f5c",id:"javascript-\u5be6\u4f5c-4",level:3},{value:"Complexity",id:"complexity-4",level:3},{value:"\u7d50\u8ad6",id:"\u7d50\u8ad6",level:2},{value:"\u53c3\u8003\u8cc7\u6599",id:"\u53c3\u8003\u8cc7\u6599",level:3}],k={toc:d},p="wrapper";function s(t){let{components:n,...e}=t;return(0,i.kt)(p,(0,l.Z)({},k,e,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u4ec0\u9ebc\u662f-disjoint-set-\u70ba\u4ec0\u9ebc\u9700\u8981-disjoint-set"},"\u4ec0\u9ebc\u662f Disjoint Set? \u70ba\u4ec0\u9ebc\u9700\u8981 Disjoint Set\uff1f"),(0,i.kt)("p",null,"\u6211\u5011\u5728\u8655\u7406 Graph \u554f\u984c\u6642\uff0c\u6703\u9700\u8981\u77e5\u9053 2 \u500b\u9ede\u662f\u5426\u76f8\u9023\uff0c\u800c\u6211\u5011\u9700\u8981\u4e00\u7a2e\u6709\u6548\u7387\u7684\u8cc7\u6599\u7d50\u69cb\u8207\u6f14\u7b97\u6cd5\u4f86\u8655\u7406\u9019\u500b\u554f\u984c"),(0,i.kt)("p",null,"\u5982\u4ee5\u4e0b\u7684\u7bc4\u4f8b\uff0c\u6211\u5011\u53ef\u4ee5\u591a\u5feb\u5730\u627e\u51fa\u4ee5\u4e0b 2 \u9ede\u4e4b\u9593\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"0 \u8ddf 3 \u662f\u5426\u76f8\u9023\uff1f"),(0,i.kt)("li",{parentName:"ul"},"1 \u8ddf 5 \u662f\u5426\u76f8\u9023\uff1f"),(0,i.kt)("li",{parentName:"ul"},"7 \u8ddf 8 \u662f\u5426\u76f8\u9023\uff1f")),(0,i.kt)("img",{width:"500px",src:"/img/disjoint-set-illustration.png",alt:"Disjoint Set Example"}),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("p",null,"\u6211\u5011\u53ef\u4ee5\u5229\u7528 Disjoint Set (Union & Find) \u9019\u500b\u8cc7\u6599\u7d50\u69cb\u4f86\u8655\u7406\u9019\u985e\u578b\u554f\u984c"),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("admonition",{title:"Disjoint Set v.s. Union Find",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"\u901a\u5e38\u6211\u5011\u5728\u505a\u9019\u985e\u578b\u7684\u984c\u76ee\uff0c\u6703\u807d\u5230 Disjoint Set \u8ddf Union Find \u9019\u5169\u500b\u540d\u8a5e\uff0c\u9019\u5169\u500b\u540d\u8a5e\u5176\u5be6\u662f\u540c\u4e00\u500b\u6771\u897f\uff0c\n\u4f46\u5dee\u5225\u5728\u65bc\uff1a"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Disjoint Set\uff1a\u4e3b\u8981\u5728\u63cf\u8ff0\u8cc7\u6599\u7d50\u69cb\uff0c\u8868\u793a\u5404\u7fa4\u4e0d\u76f8\u4ea4\u7684 vertices \u96c6\u5408"),(0,i.kt)("li",{parentName:"ul"},"Union Find\uff1a\u4e3b\u8981\u5728\u63cf\u8ff0\u6f14\u7b97\u6cd5\uff0c\u5206\u5225\u70ba Union \u8207 Find\uff0cUnion \u7528\u65bc\u5c07\u5169\u500b\u9ede\u9023\u7d50\uff0cFind \u7528\u65bc\u627e\u67e5 vertice \u7684 root node"))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"\u76f8\u95dc\u8853\u8a9e"},"\u76f8\u95dc\u8853\u8a9e"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parent node"),"\uff1a vertex \u76f4\u63a5\u5c0d\u61c9\u7684 parent node"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Root node"),"\uff1a\u6c92\u6709 parent \u7684 node\uff0c\u6216\u8005\u8aaa\u81ea\u5df1\u5c31\u662f\u81ea\u5df1\u7684 parent node ",(0,i.kt)("br",null),"\n(a node without a parent node; it can be viewed as the parent node of itself.)")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"disjoint-set-\u7684\u904b\u4f5c\u6d41\u7a0b"},"Disjoint Set \u7684\u904b\u4f5c\u6d41\u7a0b"),(0,i.kt)("p",null,"\u5047\u8a2d\u6211\u5011\u73fe\u5728\u6709 0 ~ 9 \u7684 vertices\uff0c\u4e26\u4e14\u5728\u9019\u500b Graph \u7684 edges \u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"[\n    [0, 1], [0, 2], [1, 3],\n    [4, 8], [5, 6], [5, 7]\n]\n")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("p",null,"\u4e0b\u9762\u6211\u5011\u5c31\u7528\u4e00\u500b Slides \u7684\u5716\u793a\u4f86\u4ecb\u7d39 Disjoint Set \u7684\u904b\u4f5c\u6d41\u7a0b"),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vRgslvFdlKVuZT-Bo7w9A5ZFkwMBNBGvRnoID_mlf37Ffh50AHgWalYz2e5hvALVTtmtOpmDUUDnOb7/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("p",null,"\u6211\u5011\u900f\u904e edge \u9023\u7d50\u5404\u9ede\uff0c\u4f86\u5c07\u76f8\u95dc\u9023\u7684 vertices \u5404\u81ea\u6b78\u985e\u5230\u4e0d\u540c\u7684 set\uff0c\n\u6700\u5f8c\u5728 Slides 8\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u7528\u6700\u7d42\u7684 sets \u4f86\u5224\u65b7 2 \u9ede\u662f\u5426\u76f8\u9023\uff0c\u4f8b\u5982\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0, 3"),"\uff1a\u6709\u76f8\u540c\u7684 root\uff0c\u6240\u4ee5\u76f8\u9023"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1, 5"),"\uff1a\u6c92\u6709\u76f8\u540c\u7684 root\uff0c\u6240\u4ee5\u4e0d\u76f8\u9023"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"7, 8"),"\uff1a\u6c92\u6709\u76f8\u540c\u7684 root\uff0c\u6240\u4ee5\u4e0d\u76f8\u9023")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"\u8cc7\u6599\u7d50\u69cb\u7684\u904b\u4f5c"},"\u8cc7\u6599\u7d50\u69cb\u7684\u904b\u4f5c"),(0,i.kt)("p",null,"\u5982\u679c\u6211\u5011\u628a Disjoint Set \u7684\u904b\u4f5c\u8f49\u6210\u7a0b\u5f0f\u7684\u8cc7\u6599\u89e3\u69cb\uff0c\u6211\u5011\u53ef\u4ee5\u7528 1 Array \u4f86\u8868\u793a\uff0c\u5176\u4e2d\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6bcf\u500b index \u4ee3\u8868\u6bcf\u500b vertex"),(0,i.kt)("li",{parentName:"ul"},"\u6bcf\u500b index \u7684 value \u4ee3\u8868\u6bcf\u500b vertex \u7684 parent node")),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vSJYRcP59NzSWdM8gjkXhm-fkncZ8JG4LBroxt6VNoWmqZY3sjBNX4IIN-0jPS6VPFNMnJSAZyHjF_e/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("p",null,"\u4e26\u4e14\uff0c\u5982\u679c\u6211\u5011\u60f3\u77e5\u9053 2 vertices \u662f\u5426\u76f8\u9023\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e 2 \u500b vertices \u7684 root node \u662f\u5426\u76f8\u540c\u4f86\u5224\u65b7\uff0c\n\u6211\u5011\u53ef\u4ee5\u5229\u7528 parent array \u4f86\u627e\u5230\u6bcf\u500b vertex \u7684 root node\uff0c\u4e26\u5229\u7528 root node \u7684 parent \u5c31\u662f\u81ea\u5df1\u672c\u8eab\u7684\u7279\u6027\uff1a\n\u4ee5\u4e0a\u5716\u7684\u4f8b\u5b50\u4f86\u8aaa\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u2705 (0,3) \u662f\u76f8\u9023\u7684\uff0c\u56e0\u70ba",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"findRoot(0) === 0")," \uff1aparentArray","[0]"," = 0 --\x3e 0"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"findRoot(3) === 0")," \uff1aparentArray","[3]"," = 1 --\x3e parentArray","[1]"," = 0 --\x3e parentArray","[0]"," = 0 --\x3e 0")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u274c (1,5) \u662f\u4e0d\u76f8\u9023\u7684\uff0c\u56e0\u70ba",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"findRoot(1) === 0")," \uff1aparentArray","[1]"," = 0 --\x3e parentArray","[0]"," = 0 --\x3e 0"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"findRoot(5) === 5")," \uff1aparentArray","[5]"," = 5")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u274c (7,8) \u662f\u4e0d\u76f8\u9023\u7684\uff0c\u56e0\u70ba",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"findRoot(7) === 5")," \uff1aparentArray","[7]"," = 5 --\x3e parentArray","[5]"," = 5 --\x3e 5"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"findRoot(8) === 4")," \uff1aparentArray","[8]"," = 4 --\x3e parentArray","[4]"," = 4 --\x3e 4")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"\u91cd\u8981-functions"},"\u91cd\u8981 functions"),(0,i.kt)("p",null,"\u5728 Disjoint Set \u4e2d\uff0c\u6211\u5011\u6709 2 \u500b\u91cd\u8981\u7684 functions\uff0c\u53ef\u4ee5\u5e6b\u6211\u5011\u89e3\u6c7a\u591a\u6578\u7684\u554f\u984c\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"find"),"\uff1a\u627e\u5230\u7d66\u5b9a vertex \u7684 root node"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"union"),"\uff1a\u5c07\u8f38\u5165\u7684 2 \u500b input vertices \u9023\u7d50\u8d77\u4f86\uff0c\u4e26\u8a2d\u70ba\u540c\u4e00\u500b root node")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"\u5169\u7a2e\u5be6\u4f5c\u6a21\u5f0f"},"\u5169\u7a2e\u5be6\u4f5c\u6a21\u5f0f"),(0,i.kt)("p",null,"\u6839\u64da\u4e0d\u540c\u7684\u9700\u6c42\uff0c\u6211\u5011\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u5be6\u4f5c\u6a21\u5f0f\uff0c\u5206\u5225\u9054\u5230\u6700\u597d\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u7684\u6548\u7387\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Implementation with ",(0,i.kt)("strong",{parentName:"li"},"Quick Find"),"\uff1a",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"find"),"\uff1aO(1)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"union"),"\uff1aO(N)")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Implementation with ",(0,i.kt)("strong",{parentName:"li"},"Quick Union"),"\uff1a",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"find"),"\uff1a\uff2f(N)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"union"),"\uff1aO(N)")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"quick-find"},"Quick Find"),(0,i.kt)("p",null,"\u5982\u679c\u6211\u5011\u8981\u5feb\u901f\u627e\u5230\u6307\u5b9a vertex \u7684 root node\uff0c\u6211\u5011\u53ef\u4ee5\u5c07 array value \u6539\u70ba\u5132\u5b58 Root vertex\uff0c\n\u9019\u6a23\u4e00\u4f86\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u5728 O(1) \u7684\u6642\u9593\u5167\u627e\u5230\u6307\u5b9a vertex \u7684 root node"),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vSMJjJNXZXdVzOZyspC6mbQOHzSMlMnQylUC-sBDmYklFiPrUCqy7Il1gQPzlu6ANenLGWVMZTDHG5-/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("br",null),(0,i.kt)("p",null,"\u4f46\u4ee3\u50f9\u662f\uff1a\u6211\u5011\u5728 union \u7684\u6642\u5019\u5c31\u9700\u8981 O(N) \u7684\u6642\u9593\u4f86\u66f4\u65b0\u6240\u6709\u76f8\u95dc\u7684 vertices"),(0,i.kt)("p",null,"\u4ee5\u4e0b\u5217\u7684\u4f8b\u5b50\u4f86\u8aaa\uff0c\u6211\u5011\u6709\u5169\u7d44 sets\uff0c\u5206\u5225\u4ee5 0, 2 \u70ba root node\uff0c\u7576\u6211\u5011\u9023\u7d50 0, 2 \u6642\uff0c\u6211\u5011\u4e5f\u8981\u540c\u6642\u66f4\u6539 root node \u70ba 2 \u7684\u6240\u6709 vertices\uff0c\n\u5c07\u5176 root node \u6539\u70ba 2"),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vROJrdNWFbZIcpsjK8o1UHgGVcXE1UrvNgIGKeJIhuEVaUGCo82eI5nY-Ji39ZsN7M42sM6Yc3SZdAR/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"javascript-\u5be6\u4f5c"},"JavaScript \u5be6\u4f5c"),(0,i.kt)("p",null,"\u6211\u5011\u4e3b\u8981\u9700\u8981\u5be6\u4f5c\u4e09\u500b methods\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"find"),"\uff1a\u627e\u5230\u6307\u5b9a vertex \u7684 root node"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"union"),"\uff1a\u5c07\u8f38\u5165\u7684 2 \u500b input vertices \u9023\u7d50\u8d77\u4f86\uff0c\u4e26\u8a2d\u70ba\u540c\u4e00\u500b root node"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"connected"),"\uff1a\u78ba\u8a8d\u5169\u9ede\u662f\u5426\u76f8\u9023")),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"class UnionFind {\n    root = [];\n    \n    // \u4e00\u958b\u59cb\u5148\u9810\u8a2d\u6bcf\u500b vertex \u7684 root node \u70ba\u81ea\u5df1\n    constructor(size) {\n        for (let i = 0; i < size; i++) {\n            this.root[i] = i;\n        }\n    }\n\n    // \u76f4\u63a5\u56de\u50b3 root array \u7684\u503c\n    find(x) {\n        return this.root[x];\n    }\n\n    // 1. \u5148\u627e\u5230 x, y \u7684 root node\n    // 2. \u5c07 y \u7684 root node \u8a2d\u70ba x \u7684 root node\n    // 3. \u5c07 root node \u70ba y \u7684\u5176\u4ed6 vertices \u7684 root node \u4e5f\u4e00\u8d77\u66f4\u65b0\u6210 x \u7684 root node\n    union(x, y) {\n        const rootX = this.find(x);\n        const rootY = this.find(y);\n\n        if (rootX !== rootY) {\n            this.root[y] = rootX;\n\n            for (let i  = 0; i < this.root.length; i++) {\n                if (this.root[i] === rootY) {\n                    this.root[i] = rootX;\n                }\n            }\n        }\n    }\n\n    // \u78ba\u8a8d\u5169\u9ede\u662f\u5426\u76f8\u9023\uff0c\u900f\u904e 2 vertices \u7684 root node \u4f86\u5224\u65b7\n    connected(x, y) {\n        return this.find(x) === this.find(y);\n    }\n}\n")),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"complexity"},"Complexity"),(0,i.kt)("p",null,"\u5c0d\u65bc Quick Find\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u53ef\u4ee5\u9054\u5230 O(1) \u7684\u6548\u7387\uff0c\u4f46 ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u9700\u8981\u6aa2\u67e5\u6240\u6709 vertices \u7684 root node \u662f\u5426\u9700\u8981\u66f4\u6539\uff0c\u9700\u8981 O(N) \u7684\u6642\u9593"),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"Union-find Constructor"),(0,i.kt)("th",null,"Find"),(0,i.kt)("th",null,"Union"),(0,i.kt)("th",null,"Connected"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Time Complexity")),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(1)"),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(1)"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Space Complexity")),(0,i.kt)("td",{colSpan:4},"O(N)")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"quick-union"},"Quick Union"),(0,i.kt)("p",null,"\u5982\u679c\u6211\u5011\u8981\u5feb\u901f\u9023\u7d50 2 vertices\uff0c\u6211\u5011\u4fdd\u6301 parent array \u7684\u503c\u70ba parent node\uff0c\u6703\u662f\u6700\u6709\u6548\u7684\u65b9\u5f0f"),(0,i.kt)("p",null,"\u5982\u4e0b\u5716\u4e2d\uff0c\u7576\u6211\u5011\u9023\u7d50 ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"4")," \u6642\uff0c\u6211\u5011\u53ea\u9700\u8981\u5c07 ",(0,i.kt)("inlineCode",{parentName:"p"},"4")," \u7684 parent node \u8a2d\u70ba 0\uff0c\u800c\u4e0d\u9700\u8981\u66f4\u65b0\u5176\u4ed6 vertices \u7684 parent node\uff0c\u5728 union \u4e2d\u6e1b\u5c11\u975e\u5e38\u591a\u7684\u64cd\u4f5c"),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vR6qjxf3OB3uoaFIqhalEgTDcOKD3M9Jard-vCbDHzsgcWDeVDKI3Tl2T7bFiK3716omx79X-VktYbK/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("h3",{id:"javascript-\u5be6\u4f5c-1"},"JavaScript \u5be6\u4f5c"),(0,i.kt)("p",null,"\u6211\u5011\u9700\u8981\u5be6\u4f5c\u4e09\u500b methods \u8ddf Quick Find \u76f8\u540c\uff0c\u4e3b\u8981\u662f highlight \u7684\u90e8\u5206\u5be6\u4f5c\u4e0a\u6709\u5dee\u5225\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"find"),"\uff1a\u627e\u5230\u6307\u5b9a vertex \u7684 root node"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"union"),"\uff1a\u5c07\u8f38\u5165\u7684 2 \u500b input vertices \u9023\u7d50\u8d77\u4f86\uff0c\u4e26\u8a2d\u70ba\u540c\u4e00\u500b root node"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"connected"),"\uff1a\u78ba\u8a8d\u5169\u9ede\u662f\u5426\u76f8\u9023")),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"class UnionFind {\n    root = [];\n\n    constructor(size) {\n        for (let i = 0; i < size; i++) {\n            this.root[i] = i;\n        }\n    }\n\n    // \u4e00\u76f4\u53bb\u627e\u5c0b parent node\uff0c\u76f4\u5230 parent node \u5c31\u662f\u81ea\u5df1\u672c\u8eab\n    find(x) {\n        // highlight-start\n        while (this.root[x] !== x) {\n            x = this.root[x];\n        }\n\n        return x;\n        // highlight-end\n    }\n\n    // 1. \u5148\u627e\u5230 x, y \u7684 root node\n    // 2. \u5c07 y \u7684 root node \u8a2d\u70ba x \u7684 root node\n    union(x, y) {\n        // highlight-start\n        const rootX = this.find(x);\n        const rootY = this.find(y);\n\n        if (rootX !== rootY) {\n            this.root[y] = rootX;\n        }\n        // highlight-end\n    }\n\n    // \u78ba\u8a8d\u5169\u9ede\u662f\u5426\u76f8\u9023\uff0c\u900f\u904e 2 vertices \u7684 root node \u4f86\u5224\u65b7\n    connected(x, y) {\n        return this.find(x) === this.find(y);\n    }\n}\n")),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"complexity-1"},"Complexity"),(0,i.kt)("p",null,"\u5c0d\u65bc Quick Union\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u9700\u8981\u4e00\u76f4\u53bb\u627e\u5c0b parent node\uff0c\u76f4\u5230 parent node \u5c31\u662f\u81ea\u5df1\u672c\u8eab\uff0c\u9700\u8981 O(N) \u7684\u6642\u9593\uff0c\u4f46\u9019\u662f worst case \u7684\u72c0\u6cc1\uff0c\u5982\u4e0b\u5716\uff0c\n\u800c ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u56e0\u70ba\u7528\u5230\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," method\uff0c\u6240\u4ee5\u6642\u9593\u8907\u96dc\u5ea6\u4e5f\u662f O(N)"),(0,i.kt)("mermaid",{value:"flowchart TD\nid1((4)) --- id2((3))\nid2((3)) --- id3((2))\nid3((2)) --- id4((1))"}),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"Union-find Constructor"),(0,i.kt)("th",null,"Find"),(0,i.kt)("th",null,"Union"),(0,i.kt)("th",null,"Connected"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Time Complexity")),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(N)"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Space Complexity")),(0,i.kt)("td",{colSpan:4},"O(N)")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"quick-union-vs-quick-find"},"Quick Union vs Quick Find"),(0,i.kt)("p",null,"\u82e5\u8981\u5f9e 0 \u7d44\u5230 n \u7684 union\uff1a"),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"Find"),(0,i.kt)("th",null,"Union"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Quick Find")),(0,i.kt)("td",null,"O(1)"),(0,i.kt)("td",null,"N * O(N) === O(N^2)"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Quick Union")),(0,i.kt)("td",null,"O(N) (In worst case)"),(0,i.kt)("td",null,"N * O(N) === O(N^2) (In worst case)")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("p",null,"\u5e73\u5747\u4e0b\u4f86"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Quick Union \u7684\u6548\u7387\u6703\u6bd4 Quick Find \u4f86\u5f97\u597d"))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"quick-union-optimizations"},"Quick Union Optimizations"),(0,i.kt)("p",null,"\u7531\u65bc Quick Union \u5728\u4e0d\u7ba1\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u7684 worst case \u7684\u72c0\u6cc1\u4e0b\uff0c\u6703\u9700\u8981 O(N) \u7684\u6642\u9593\uff0c\u6211\u5011\u5e0c\u671b\u53ef\u4ee5\u518d\u9032\u4e00\u6b65\u512a\u5316\uff1a\n\u6211\u5011\u6709\u4ee5\u4e0b\u5169\u7a2e\u512a\u5316\u65b9\u6cd5\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Union by Rank\uff1a\u91dd\u5c0d ",(0,i.kt)("inlineCode",{parentName:"li"},"union")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u505a\u512a\u5316"),(0,i.kt)("li",{parentName:"ul"},"Path Compression\uff1a\u91dd\u5c0d ",(0,i.kt)("inlineCode",{parentName:"li"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u505a\u512a\u5316")),(0,i.kt)("p",null,"\u6211\u5011\u5c31\u4f86\u4e00\u4e00\u4ecb\u7d39"),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"union-by-rank"},"Union by Rank"),(0,i.kt)("p",null,"\u5982\u679c\u6211\u5011\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u6642\u6c92\u6709\u7279\u5225\u8655\u7406\uff0c\u5728\u6700\u58de\u7684\u60c5\u6cc1\u4e0b\uff0c\u6211\u5011\u7684 tree \u6703\u8b8a\u6210\u4e00\u500b linked list\uff0c\u9019\u6a23\u4e00\u4f86\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u5c31\u6703\u8b8a\u6210 O(N)"),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vRt1XoAmAqkD7xESTw9C-gqwMZKCq_E3EhdgjDWxsrrMX5nFuqBe-kjw_O8A8hRXD6QqHI1N2pvnqqF/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("p",null,"\u4f46\u6211\u5011\u53ef\u4ee5\u5229\u7528\u4e00\u4e9b\u6280\u5de7\uff0c\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u505a\u4e00\u4e9b\u5224\u65b7\uff0c\u8b93\u9023\u63a5\u5f8c\u7684 graph \u7684\u5ee3\u5ea6\u53ca\u6df1\u5ea6\u66f4\u5e73\u8861\uff0c\n\u9019\u6a23\u5728\u9032\u884c ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u6642\uff0c\u6548\u7387\u6703\u66f4\u597d\uff0c\u9032\u800c\u9593\u63a5\u512a\u5316 ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u7684\u6642\u9593\u8907\u96dc\u5ea6"),(0,i.kt)("p",null,"\u65b9\u6cd5\u5f88\u7c21\u55ae\uff0c\u5982\u4e0b\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u6211\u5011\u5148\u5f97\u51fa\u51fa\u5169\u500b set \u7684\u6df1\u5ea6"),(0,i.kt)("li",{parentName:"ol"},"\u4ee5\u6df1\u5ea6\u8f03\u6df1\u7684 set \u7684 root node \u70ba\u57fa\u6e96\uff0c\u5c07\u6df1\u5ea6\u8f03\u6dfa\u7684 set \u9023\u63a5\u5230\u6df1\u5ea6\u8f03\u6df1\u7684 set \u4e0a")),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vQe3AZVwjj6IijEkK7c-Mk6BOMx6EFZrKwekZQO_iNls9giDp4BR9j2QYANgcfICKDmFR5eJED72eN0/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("p",null,"\u9019\u6a23\u6211\u5011\u5c31\u53ef\u4ee5\u907f\u514d\u6700\u58de\u7684 O(N) \u7684\u72c0\u6cc1"),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"javascript-\u5be6\u4f5c-2"},"JavaScript \u5be6\u4f5c"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u5ba3\u544a\u4e00\u500b rank array\uff0c\u7528\u4f86\u5132\u5b58\u6bcf\u500b vertex \u7684\u6df1\u5ea6"),(0,i.kt)("li",{parentName:"ol"},"\u5148\u9810\u8a2d\u6bcf\u500b vertex \u7684\u6df1\u5ea6\u70ba 1"),(0,i.kt)("li",{parentName:"ol"},"\u5728 ",(0,i.kt)("inlineCode",{parentName:"li"},"union")," \u6642\uff0c\u6bd4\u8f03\u5169\u500b set \u7684\u6df1\u5ea6\uff0c",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"\u5c07\u6df1\u5ea6\u8f03\u6dfa\u7684 set \u9023\u63a5\u5230\u6df1\u5ea6\u8f03\u6df1\u7684 set \u4e0a"),(0,i.kt)("li",{parentName:"ol"},"\u5982\u679c\u6df1\u5ea6\u76f8\u540c\uff0c\u5247\u5c07\u5176\u4e2d\u4e00\u500b set \u9023\u63a5\u5230\u53e6\u4e00\u500b set \u4e0a\uff0c\u4e26\u5c07\u88ab\u63a5\u4e0a\u7684 vertex rank \u52a0 1")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"class UnionFind {\n    root = [];\n    // highlight-start\n    rank = [];\n    // highlight-end\n\n    constructor(size) {\n        for (let i = 0; i < size; i++) {\n            root[i] = i;\n            // highlight-start\n            rank[i] = 1;    \n            // highlight-end\n        }\n    }\n\n    union(x, y) {\n        const rootX = this.find(x);\n        const rootY = this.find(y);\n\n        if (rootX !== rootY) {\n            // \u770b\u54ea\u908a\u8f03\u5927\uff0c\u5c31\u8a2d\u54ea\u908a\u70ba root node\n            // \u5982\u679c\u5169\u908a\u4e00\u6a23\u5927\uff0c\u90a3\u6211\u5011\u5c31\u96a8\u908a\u8a2d\u4e00\u908a\u70ba root node\uff0c\u4e26\u4e14\u5c07 rank +1\uff0c\u8868\u793a\u6703\u518d\u591a 1 \u7684\u9ad8\u5ea6\n            // highlight-start\n            if (rank[rootX] > rank[rootY]) {\n                root[rootY] = rootX;\n            } else if (rank[rootX] < rank[rootY]) {\n                root[rootX] = rootY;\n            } else {\n                root[rootY] = rootX;\n                rank[rootX] += 1;\n            }\n            // highlight-end\n        }\n    }\n\n}\n")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"complexity-2"},"Complexity"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Time Complexity"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u5c0d\u65bc ",(0,i.kt)("inlineCode",{parentName:"li"},"union-find"),"\uff0c\u6211\u5011\u9700\u8981\u5efa\u7acb 2 \u500b size N \u7684 array"),(0,i.kt)("li",{parentName:"ul"},"\u5c0d\u65bc ",(0,i.kt)("inlineCode",{parentName:"li"},"find"),"\uff0c\u5728\u6700\u7cdf\u7684\u60c5\u6cc1\u4e0b\uff0c\u6211\u5011\u91cd\u8907\u9023\u7d50\u6df1\u5ea6\u76f8\u540c\u7684 graph\uff0cgraph height \u6700\u591a\u662f log (N) + 1\uff0c\u6240\u4ee5 ",(0,i.kt)("inlineCode",{parentName:"li"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u662f O(log N)"),(0,i.kt)("li",{parentName:"ul"},"\u5c0d\u65bc ",(0,i.kt)("inlineCode",{parentName:"li"},"union")," \u548c ",(0,i.kt)("inlineCode",{parentName:"li"},"connected"),"\uff0c\u6211\u5011\u9700\u8981\u5148 ",(0,i.kt)("inlineCode",{parentName:"li"},"find")," 2 \u500b vertices \u7684 root node\uff0c\u6240\u4ee5\u6642\u9593\u8907\u96dc\u5ea6\u662f O(log N)")))),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Space Complexity"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u5c0d\u65bc ",(0,i.kt)("inlineCode",{parentName:"li"},"union-find"),"\uff0c\u6211\u5011\u9700\u8981\u5efa\u7acb 2 \u500b size N \u7684 array")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"Union-find Constructor"),(0,i.kt)("th",null,"Find"),(0,i.kt)("th",null,"Union"),(0,i.kt)("th",null,"Connected"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Time Complexity")),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(log N)"),(0,i.kt)("td",null,"O(log N)"),(0,i.kt)("td",null,"O(log N)"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Space Complexity")),(0,i.kt)("td",{colSpan:4},"O(N)")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"path-compression"},"Path Compression"),(0,i.kt)("p",null,"\u9664\u4e86\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u512a\u5316\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u91dd\u5c0d ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," method \u505a\u512a\u5316\uff0c\u6211\u5011\u53ef\u4ee5\u8b93 ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u6a5f\u4e4e\u8b8a\u6210\u8ddf Quick Find \u4e00\u6a23\uff0c\u903c\u8fd1\u65bc O(1)"),(0,i.kt)("p",null,"\u6211\u5011\u5728\u7b2c\u4e00\u6b21\u57f7\u884c ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u6642\uff0c\u6211\u5011\u53ef\u4ee5\u5229\u7528 Recursion \u7684\u6280\u5de7\uff0c\u4f86\u53d6\u5f97 root node\uff0c\u4e26\u5c07\u6bcf\u500b vertex \u7684 parent node \u8a2d\u70ba root node\uff0c\n\u9019\u6a23\u4e00\u4f86\uff0c\u5728\u7b2c\u4e8c\u6b21\u4ee5\u5f8c\u57f7\u884c ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u6642\uff0c\u6642\u9593\u8907\u96dc\u5ea6\u5c31\u6703\u8b8a\u6210 O(1)"),(0,i.kt)("br",null),(0,i.kt)("div",{style:{position:"relative",width:"100%",maxWidth:"600px",height:"0",paddingBottom:"62.5%"}},(0,i.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vSZ-cFpXuS881jDmM_Af3BITW-slXUzB-J5FEWkzsdch04JMlqndqxscd_-QEcoIkvTXrZ-u6KiOqPQ/embed?start=false&loop=false&delayms=3000",frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",maxWidth:"600px",maxHeight:"375px"}})),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"javascript-\u5be6\u4f5c-3"},"JavaScript \u5be6\u4f5c"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u5148\u53d6\u5f97 x \u7684 parent node"),(0,i.kt)("li",{parentName:"ol"},"\u518d\u5229\u7528 Recursion \u7684\u6280\u5de7\uff0c\u518d\u5f80\u4e0b\u627e parent \u7684 parent\uff0c\u76f4\u5230\u627e\u5230 root node"),(0,i.kt)("li",{parentName:"ol"},"\u4e26\u5c07 x \u7684 parent node \u8a2d\u70ba root node")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"class UnionFind {\n    ...\n    find(x) {\n        // highlight-start\n        if (this.root[x] === x) {\n            return x;\n        }\n\n        const parent = this.root[x];\n        const rootX = this.find(parent);\n        this.root[x] = rootX;\n\n        return rootX;\n        // highlight-end\n    }\n    ...\n}\n")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"complexity-3"},"Complexity"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Time Complexity"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u5c0d\u65bc ",(0,i.kt)("inlineCode",{parentName:"li"},"find"),"\uff0c\u5728\u6700\u597d\u7684\u60c5\u6cc1\u4e0b\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u5c64\u7684\u5e73\u8861\u8853\uff0c\u6642\u9593\u8907\u96dc\u5ea6\u70ba O(1)\uff0c\u5728\u6700\u58de\u7684\u60c5\u6cc1\u4e0b\uff0c\u4e5f\u5c31\u662f\u7de8\u6210\u4e00\u500b linked list\uff0c\u6642\u9593\u8907\u96dc\u5ea6\u70ba O(N)\uff0c\n\u9019\u6a23\u5e73\u5747\u4e0b\u4f86\uff0c\u6642\u9593\u8907\u96dc\u5ea6\u70ba O(log N) \uff08\u8a73\u7d30\u53ef\u4ee5\u53c3\u8003 ",(0,i.kt)("a",{parentName:"li",href:"https://www.cs.tau.ac.il/~michas/ufind.pdf"},"Top-Down Analysis of Path Compression"),"\uff09")))),(0,i.kt)("br",null),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"Union-find Constructor"),(0,i.kt)("th",null,"Find"),(0,i.kt)("th",null,"Union"),(0,i.kt)("th",null,"Connected"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Time Complexity")),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(log N)"),(0,i.kt)("td",null,"O(log N)"),(0,i.kt)("td",null,"O(log N)"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Space Complexity")),(0,i.kt)("td",{colSpan:4},"O(N)")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"\u512a\u5316\u5b8c\u7684-quick-union"},"\u512a\u5316\u5b8c\u7684 Quick Union"),(0,i.kt)("h3",{id:"javascript-\u5be6\u4f5c-4"},"JavaScript \u5be6\u4f5c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"class UnionFind {\n    root = [];\n    rank = [];\n\n    constructor(n) {\n        for (let i = 0; i < n; i++) {\n            this.root[i] = i;\n            this.rank[i] = 1;\n        }\n    }\n\n    find(x) {\n        if (this.root[x] === x) {\n            return x;\n        }\n\n        const parent = this.root[x];\n        const rootX = this.find(parent);\n        this.root[x] = rootX;\n\n        return rootX;\n    }\n\n    union(x, y) {\n        const rootX = this.find(x);\n        const rootY = this.find(y);\n\n        if (rootX !== rootY) {\n            if (this.rank[rootX] > this.rank[rootY]) {\n                this.root[rootY] = rootX;\n            } else if (this.rank[rootX] < this.rank[rootY]) {\n                this.root[rootX] = rootY;\n            } else {\n                this.root[rootY] = rootX;\n                this.rank[rootX] += 1;\n            }\n        }\n    }\n\n    connected(x, y) {\n        return this.find(x) === this.find(y);\n    }\n}\n")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"complexity-4"},"Complexity"),(0,i.kt)("p",null,"\u518d\u7d93\u904e Union by Rank \u548c Path Compression \u7684\u512a\u5316\u5f8c\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u8b8a\u6210 O(\u03b1(N))\uff0c\n\u5176\u4e2d \u03b1(N) \u662f Ackermann function \u7684\u53cd\u51fd\u6578\uff0c\u589e\u9577\u901f\u5ea6\u6703\u975e\u5e38\u6162\uff0c\u5176\u503c\u6703\u975e\u5e38\u63a5\u8fd1\u65bc O(1)\uff0c\n",(0,i.kt)("inlineCode",{parentName:"p"},"union")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"connected")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u4e5f\u6703\u56e0\u70ba ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u8b8a\u6210 O(\u03b1(N))"),(0,i.kt)("br",null),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"Union-find Constructor"),(0,i.kt)("th",null,"Find"),(0,i.kt)("th",null,"Union"),(0,i.kt)("th",null,"Connected"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Time Complexity")),(0,i.kt)("td",null,"O(N)"),(0,i.kt)("td",null,"O(\u03b1(N))"),(0,i.kt)("td",null,"O(\u03b1(N))"),(0,i.kt)("td",null,"O(\u03b1(N))"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("strong",null,"Space Complexity")),(0,i.kt)("td",{colSpan:4},"O(N)")))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"\u7d50\u8ad6"},"\u7d50\u8ad6"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Disjoint Set \u662f\u7528\u4f86\u5224\u65b7\u5169\u9ede\u662f\u5426\u76f8\u9023"),(0,i.kt)("li",{parentName:"ol"},"\u6709\u5169\u7a2e\u65b9\u6cd5\u53ef\u4ee5\u5be6\u4f5c Disjoint Set\uff1aQuick Find \u548c Quick Union\uff0c",(0,i.kt)("strong",{parentName:"li"},"Quick Union")," \u7684\u6548\u7387\u6bd4\u8f03\u597d"),(0,i.kt)("li",{parentName:"ol"},"Quick Union \u53ef\u4ee5\u518d\u9032\u4e00\u6b65\u512a\u5316\uff0c\u5229\u7528 Union by Rank \u512a\u5316 ",(0,i.kt)("inlineCode",{parentName:"li"},"union")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\uff0c\u4e26\u5229\u7528 Path Compression \u512a\u5316 ",(0,i.kt)("inlineCode",{parentName:"li"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6"),(0,i.kt)("li",{parentName:"ol"},"Quick Union \u7d93\u904e\u512a\u5316\u5f8c\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"find")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u8b8a\u6210 O(\u03b1(N))\uff0c\u5e7e\u4e4e\u903c\u8fd1\u65bc O(1)\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"union")," \u548c ",(0,i.kt)("inlineCode",{parentName:"li"},"connected")," \u7684\u6642\u9593\u8907\u96dc\u5ea6\u4e5f\u6703\u9023\u5e36\u8b8a\u6210 O(\u03b1(N))")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"\u53c3\u8003\u8cc7\u6599"},"\u53c3\u8003\u8cc7\u6599"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/explore/learn/card/graph/618/disjoint-set/3881/"},"LeetCode Explore - Disjoint Set"))),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("br",null))}s.isMDXComponent=!0}}]);