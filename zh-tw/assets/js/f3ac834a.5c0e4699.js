"use strict";(self.webpackChunkbenson_doc=self.webpackChunkbenson_doc||[]).push([[2054],{3905:(e,t,a)=>{a.d(t,{Zo:()=>k,kt:()=>u});var l=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,l,i=function(e,t){if(null==e)return{};var a,l,i={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=l.createContext({}),s=function(e){var t=l.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},k=function(e){var t=s(e.components);return l.createElement(m.Provider,{value:t},e.children)},o="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,m=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),o=s(a),d=i,u=o["".concat(m,".").concat(d)]||o[d]||c[d]||r;return a?l.createElement(u,n(n({ref:t},k),{},{components:a})):l.createElement(u,n({ref:t},k))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,n=new Array(r);n[0]=d;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p[o]="string"==typeof e?e:i,n[1]=p;for(var s=2;s<r;s++)n[s]=a[s];return l.createElement.apply(null,n)}return l.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3781:(e,t,a)=>{a.r(t),a.d(t,{Easy:()=>c,Hard:()=>k,Medium:()=>o,assets:()=>m,contentTitle:()=>n,default:()=>h,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var l=a(7462),i=(a(7294),a(3905));const r={sidebar__label:"[LeetCode] Lv.3 \u8a08\u756b",title:"[LeetCode] Lv.3 \u8a08\u756b"},n=void 0,p={unversionedId:"Code/leetcode-lv3",id:"Code/leetcode-lv3",title:"[LeetCode] Lv.3 \u8a08\u756b",description:"\u8cc7\u6599\u7d50\u69cb Lv.3 (14/ 29 - 8 - 2 = 19)",source:"@site/docs/Code/leetcode-lv3.mdx",sourceDirName:"Code",slug:"/Code/leetcode-lv3",permalink:"/zh-tw/docs/Code/leetcode-lv3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Code/leetcode-lv3.mdx",tags:[],version:"current",frontMatter:{sidebar__label:"[LeetCode] Lv.3 \u8a08\u756b",title:"[LeetCode] Lv.3 \u8a08\u756b"},sidebar:"tutorialSidebar",previous:{title:"[LeetCode] Lv.2 \u8a08\u756b",permalink:"/zh-tw/docs/Code/leetcode-lv2"},next:{title:"[LeetCode] Lv.4 \u8a08\u756b",permalink:"/zh-tw/docs/Code/leetcode-lv4"}},m={},s=[{value:"\u8cc7\u6599\u7d50\u69cb Lv.3 (14/ 29 - 8 - 2 = 19)",id:"\u8cc7\u6599\u7d50\u69cb-lv3-14-29---8---2--19",level:2},{value:"\u6f14\u7b97\u6cd5 Lv.3",id:"\u6f14\u7b97\u6cd5-lv3",level:2},{value:"Stage 1",id:"stage-1",level:2},{value:"Reading",id:"reading",level:3},{value:"Tree",id:"tree",level:4},{value:"Graph",id:"graph",level:4},{value:"Heap",id:"heap",level:4},{value:"Trie",id:"trie",level:4},{value:"Questions",id:"questions",level:3},{value:"Tree",id:"tree-1",level:4},{value:"Graph",id:"graph-1",level:4},{value:"Heap / Priority Queue",id:"heap--priority-queue",level:4},{value:"Week 2",id:"week-2",level:2},{value:"Tree",id:"tree-2",level:3},{value:"Graph",id:"graph-2",level:3},{value:"Heap",id:"heap-1",level:3},{value:"Trie",id:"trie-1",level:3},{value:"Stage 3",id:"stage-3",level:2},{value:"Tree",id:"tree-3",level:3},{value:"Heap",id:"heap-2",level:3}],k=()=>(0,i.kt)("span",{style:{backgroundColor:"rgba(255, 45, 85, 0.15)",borderRadius:"15px",color:"rgb(255, 45, 85)",padding:"5px 10px",fontWeight:"bold",fontSize:"14px",margin:"0 5px"}},"Hard"),o=()=>(0,i.kt)("span",{style:{backgroundColor:"rgba(255, 184, 0, 0.15)",borderRadius:"15px",color:"rgb(255, 184, 0)",padding:"5px 10px",fontWeight:"bold",fontSize:"14px",margin:"0 5px"}},"Medium"),c=()=>(0,i.kt)("span",{style:{backgroundColor:"rgba(0, 175, 155, 0.15)",borderRadius:"15px",color:"rgb(0, 175, 155)",padding:"5px 10px",fontWeight:"bold",fontSize:"14px",margin:"0 5px"}},"Easy"),d={toc:s,Hard:k,Medium:o,Easy:c},u="wrapper";function h(e){let{components:t,...a}=e;return(0,i.kt)(u,(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u8cc7\u6599\u7d50\u69cb-lv3-14-29---8---2--19"},"\u8cc7\u6599\u7d50\u69cb Lv.3 (14/ 29 - 8 - 2 = 19)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tree",(0,i.kt)("ul",{parentName:"li",className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/balanced-binary-tree"},"Balanced Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/invert-binary-tree"},"Invert Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/diameter-of-binary-tree"},"Diameter of Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/maximum-depth-of-binary-tree"},"Maximum Depth of Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/binary-tree-level-order-traversal"},"Binary Tree Level Order Traversal")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/validate-binary-search-tree"},"Validate Binary Search Tree")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree"},"Lowest Common Ancestor of a Binary Tree")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/time-based-key-value-store"},"Time Based Key-Value Store")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/binary-tree-right-side-view"},"Binary Tree Right Side View")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal"},"Construct Binary Tree from Preorder and Inorder Traversal")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst"},"Kth Smallest Element in a BST")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/binary-tree-maximum-path-sum/"},"Binary Tree Maximum Path Sum")," ",(0,i.kt)(k,{mdxType:"Hard"})))),(0,i.kt)("li",{parentName:"ul"},"Graph (TikTok \u4e0d\u5e38\u8003)",(0,i.kt)("ul",{parentName:"li",className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/flood-fill"},"Flood Fill")," ",(0,i.kt)(c,{mdxType:"Easy"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/01-matrix"},"01 Matrix")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/clone-graph"},"Clone Graph")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/course-schedule"},"Course Schedule")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/number-of-islands"},"Number of Islands")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/rotting-oranges"},"Rotting Oranges")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/accounts-merge"},"Accounts Merge")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/word-search"},"Word Search")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/minimum-height-trees"},"Minimum Height Trees")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/pacific-atlantic-water-flow"},"Pacific Atlantic Water Flow")," ",(0,i.kt)(o,{mdxType:"Medium"})))),(0,i.kt)("li",{parentName:"ul"},"Heap",(0,i.kt)("ul",{parentName:"li",className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/kth-largest-element-in-an-array/"},"Kth Largest Element in an Array")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/merge-k-sorted-lists/"},"Merge k Sorted Lists")," ",(0,i.kt)(k,{mdxType:"Hard"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/k-closest-points-to-origin"},"K Closest Points to Origin")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/task-scheduler"},"Task Scheduler")," ",(0,i.kt)(o,{mdxType:"Medium"})))),(0,i.kt)("li",{parentName:"ul"},"Trie (TikTok \u4e0d\u5e38\u8003)",(0,i.kt)("ul",{parentName:"li",className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/implement-trie-prefix-tree"},"Implement Trie (Prefix Tree)")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/word-break"},"Word Break")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/design-add-and-search-words-data-structure"},"Design Add and Search Words Data Structure")," ",(0,i.kt)(o,{mdxType:"Medium"}))))),(0,i.kt)("h2",{id:"\u6f14\u7b97\u6cd5-lv3"},"\u6f14\u7b97\u6cd5 Lv.3"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Breadth-frist search (Tree & Graph)"),(0,i.kt)("li",{parentName:"ul"},"Depth-first search (Tree & Graph)"),(0,i.kt)("li",{parentName:"ul"},"Mention of ",(0,i.kt)("inlineCode",{parentName:"li"},"k")," (Heap)")),(0,i.kt)("h2",{id:"stage-1"},"Stage 1"),(0,i.kt)("h3",{id:"reading"},"Reading"),(0,i.kt)("h4",{id:"tree"},"Tree"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.techinterviewhandbook.org/algorithms/tree/"},"Tree"))),(0,i.kt)("h4",{id:"graph"},"Graph"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.techinterviewhandbook.org/algorithms/graph/"},"Graph")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/basecs/from-theory-to-practice-representing-graphs-cfd782c5be38"},"From Theory To Practice: Representing Graphs"),", basecs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/basecs/deep-dive-through-a-graph-dfs-traversal-8177df5d0f13"},"Deep Dive Through A Graph: DFS Traversal"),", basecs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/basecs/going-broad-in-a-graph-bfs-traversal-959bd1a09255"},"Going Broad In A Graph: BFS Traversal"),", basecs")),(0,i.kt)("h4",{id:"heap"},"Heap"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.techinterviewhandbook.org/algorithms/heap/"},"Heap")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/basecs/learning-to-love-heaps-cef2b273a238"},"Learning to Love Heaps"),", basecs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/basecs/heapify-all-the-things-with-heap-sort-55ee1c93af82"},"Heapify All The Things With Heap Sort"),", basecs")),(0,i.kt)("h4",{id:"trie"},"Trie"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.techinterviewhandbook.org/algorithms/trie/"},"Trie")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/basecs/trying-to-understand-tries-3ec6bede0014"},"Trying to Understand Tries"),", basecs")),(0,i.kt)("h3",{id:"questions"},"Questions"),(0,i.kt)("h4",{id:"tree-1"},"Tree"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/balanced-binary-tree"},"Balanced Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"}),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search")),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a23"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-08-05)"))))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/invert-binary-tree"},"Invert Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"}),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Breadth-First Search")),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a30"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-09-28)"))))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/diameter-of-binary-tree"},"Diameter of Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"}),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search")),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a23"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-07-16)"))))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/maximum-depth-of-binary-tree"},"Maximum Depth of Binary Tree")," ",(0,i.kt)(c,{mdxType:"Easy"}),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Breadth-First Search")),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes")))),(0,i.kt)("h4",{id:"graph-1"},"Graph"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/flood-fill"},"Flood Fill")," ",(0,i.kt)(c,{mdxType:"Easy"}),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"for practice"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Breadth-First Search"))))),(0,i.kt)("h4",{id:"heap--priority-queue"},"Heap / Priority Queue"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/kth-largest-element-in-a-stream/"},"Kth Largest Element In a Stream")," ",(0,i.kt)(c,{mdxType:"Easy"}),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"in NeetCode 150"),(0,i.kt)("li",{parentName:"ul"},"for practice Heap"))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/last-stone-weight/"},"Last Stone Weight")," ",(0,i.kt)(c,{mdxType:"Easy"}),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"in NeetCode 150"),(0,i.kt)("li",{parentName:"ul"},"for practice Heap")))),(0,i.kt)("h2",{id:"week-2"},"Week 2"),(0,i.kt)("h3",{id:"tree-2"},"Tree"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree"},"Lowest Common Ancestor of a Binary Tree")," ",(0,i.kt)(o,{mdxType:"Medium"})," (\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search")),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a94 (2nd in Tree)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-12-01)"))),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes")))),(0,i.kt)("h3",{id:"graph-2"},"Graph"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/course-schedule"},"Course Schedule")," ",(0,i.kt)(o,{mdxType:"Medium"})," (\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Breadth-First Search"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Topological Sort")),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u5716 \u9ad8\u983b\u984c",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a16 (1st in Graph)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-12-02)")))))),(0,i.kt)("h3",{id:"heap-1"},"Heap"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/kth-largest-element-in-an-array/"},"Kth Largest Element in an Array")," (\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Divide and Conquer"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Sorting"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Quickselect")),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u5716 \u9ad8\u983b\u984c",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a160 (1st in Heap)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-12-05)")))))),(0,i.kt)("h3",{id:"trie-1"},"Trie"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/implement-trie-prefix-tree"},"Implement Trie (Prefix Tree)")," ",(0,i.kt)(o,{mdxType:"Medium"})," (\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u5716 \u9ad8\u983b\u984c",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a10 (1st in Trie)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-11-05)")))))),(0,i.kt)("h2",{id:"stage-3"},"Stage 3"),(0,i.kt)("h3",{id:"tree-3"},"Tree"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/binary-tree-level-order-traversal"},"Binary Tree Level Order Traversal")," ",(0,i.kt)(o,{mdxType:"Medium"})," (\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Bread-First Search")),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a70 (4th in Tree)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-08-16)"))),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/binary-tree-right-side-view"},"Binary Tree Right Side View")," ",(0,i.kt)(o,{mdxType:"Medium"})," (\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Bread-First Search")," \u3001 ",(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search")),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a73 (3rd in Tree)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-12-01)"))))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal"},"Construct Binary Tree from Preorder and Inorder Traversal")," ",(0,i.kt)(o,{mdxType:"Medium"})),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Hash Table"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Divide and Conquer")),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a48 (7th in Tree)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-10-10)"))),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/binary-tree-maximum-path-sum/"},"Binary Tree Maximum Path Sum")," ",(0,i.kt)(k,{mdxType:"Hard"})),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Depth-First Search"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Dynamic Programming")),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u6a39 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6\uff1a60 (5th in Tree)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-12-13)"))),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"),(0,i.kt)("li",{parentName:"ul"},"\u5be6\u969b\u96e3\u5ea6\u6700\u591a\u53ea\u6709 Medium ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/binary-tree-maximum-path-sum/discussion/comments/1712502"},"https://leetcode.com/problems/binary-tree-maximum-path-sum/discussion/comments/1712502"))))),(0,i.kt)("h3",{id:"heap-2"},"Heap"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/merge-k-sorted-lists/"},"Merge k Sorted Lists")," ",(0,i.kt)(k,{mdxType:"Hard"})," (\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Linked-List"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Divide and Conquer"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"Merge Sort")),(0,i.kt)("li",{parentName:"ul"},"in Top 100 likes"),(0,i.kt)("li",{parentName:"ul"},"in \u5b57\u7bc0\u8df3\u52d5 \u5806 \u9ad8\u983b\u984c ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u983b\u5ea6 79 (2nd in Heap)"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u8fd1\u8003\u5bdf\u6642\u9593 (2022-11-07)"))),(0,i.kt)("li",{parentName:"ul"},"\u5927\u5bb6\u8a8d\u70ba\u9019\u984c\u53ea\u6709 Medium ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/merge-k-sorted-lists/discussion/comments/1572702"},"https://leetcode.com/problems/merge-k-sorted-lists/discussion/comments/1572702"))))))}h.isMDXComponent=!0}}]);