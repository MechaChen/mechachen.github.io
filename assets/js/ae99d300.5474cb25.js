"use strict";(self.webpackChunkbenson_doc=self.webpackChunkbenson_doc||[]).push([[911],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(t),k=a,d=m["".concat(l,".").concat(k)]||m[k]||p[k]||s;return t?r.createElement(d,o(o({ref:n},u),{},{components:t})):r.createElement(d,o({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=k;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},8996:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const s={sidebar__label:"[Unit Test] 3.3 - \u6e2c\u8a66 api \u8207 React Query \u7684\u6700\u4f73\u5e6b\u624b - MockServiceWorker",title:"[Unit Test] 3.3 - \u6e2c\u8a66 api \u8207 React Query \u7684\u6700\u4f73\u5e6b\u624b - MockServiceWorker"},o=void 0,i={unversionedId:"Testing/frontend-unit-testing-3.3-mock-service-worker",id:"Testing/frontend-unit-testing-3.3-mock-service-worker",title:"[Unit Test] 3.3 - \u6e2c\u8a66 api \u8207 React Query \u7684\u6700\u4f73\u5e6b\u624b - MockServiceWorker",description:"\u524d\u8a00",source:"@site/docs/Testing/frontend-unit-testing-3.3-mock-service-worker.mdx",sourceDirName:"Testing",slug:"/Testing/frontend-unit-testing-3.3-mock-service-worker",permalink:"/docs/Testing/frontend-unit-testing-3.3-mock-service-worker",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Testing/frontend-unit-testing-3.3-mock-service-worker.mdx",tags:[],version:"current",frontMatter:{sidebar__label:"[Unit Test] 3.3 - \u6e2c\u8a66 api \u8207 React Query \u7684\u6700\u4f73\u5e6b\u624b - MockServiceWorker",title:"[Unit Test] 3.3 - \u6e2c\u8a66 api \u8207 React Query \u7684\u6700\u4f73\u5e6b\u624b - MockServiceWorker"},sidebar:"tutorialSidebar",previous:{title:"[Unit Test] 3.2 - \u6bcf\u500b\u6e2c\u8a66\u90fd\u8a72\u662f\u7368\u7acb\u7684\uff0c\u90a3\u4e9b\u4f60\u8a72\u6e05\u7684 api mock data",permalink:"/docs/Testing/frontend-unit-testing-3.2-clear-api-mocking"},next:{title:"[Frontend Unit Test] Why \u4f7f\u7528 React Testing Library?",permalink:"/docs/Testing/react-testing-library"}},l={},c=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"\u5e38\u5e38\u91cd\u8907 api data mocking",id:"\u5e38\u5e38\u91cd\u8907-api-data-mocking",level:2},{value:"Functional component",id:"functional-component",level:3},{value:"Class Component",id:"class-component",level:3},{value:"\u554f\u984c\uff1a\u96e3\u4ee5 mock <code>React Query</code> data",id:"\u554f\u984c\u96e3\u4ee5-mock-react-query-data",level:2},{value:"MSW \u7c21\u4ecb",id:"msw-\u7c21\u4ecb",level:2},{value:"\u4f7f\u7528 MSW \u6703\u9047\u5230\u7684\u554f\u984c",id:"\u4f7f\u7528-msw-\u6703\u9047\u5230\u7684\u554f\u984c",level:3},{value:"\u8f15\u9b06\u6e2c\u8a66 <code>React Query</code>",id:"\u8f15\u9b06\u6e2c\u8a66-react-query",level:2},{value:"\u7d50\u8ad6",id:"\u7d50\u8ad6",level:2},{value:"\u53c3\u8003\u8cc7\u6e90",id:"\u53c3\u8003\u8cc7\u6e90",level:3}],u={toc:c},m="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,a.kt)("p",null,"\u5728\u524d\u8ff0 ",(0,a.kt)("a",{parentName:"p",href:"./frontend-unit-testing-3.1-test-with-api"},"3.1 - \u8207 api \u7684\u6e2c\u8a66")," \u6709\u63d0\u5230 api \u7684\u6e2c\u8a66\uff0c\u5176\u5be6\u8981\u5728\u6bcf\u500b\u6e2c\u8a66\u90fd\u53bb mock api data \u662f\u4ef6\u975e\u5e38\u7e41\u7463\u7684\u4e8b\uff0c\u800c\u4e14\u91dd\u5c0d\u540c\u4e00\u500b component\uff0c\u5e38\u5e38\u6703\u9700\u8981 mock \u76f8\u540c\u7684 api data\uff0c\u9019\u6a23\u4fbf\u5927\u5927\u6e1b\u5c11\u4e86",(0,a.kt)("strong",{parentName:"p"},"\u53ef\u7dad\u8b77\u6027")),(0,a.kt)("p",null,"\u518d\u52a0\u4e0a\u73fe\u5728\u56e0\u61c9 ",(0,a.kt)("inlineCode",{parentName:"p"},"React Query")," \u7b49 Server state management tool \u7684\u51fa\u73fe\uff0c\u9019\u7a2e\u6e2c\u8a66\u65b9\u6cd5\u8b8a\u5f97\u5f88\u56f0\u96e3\uff0c\u751a\u81f3\u6703\u9700\u8981\u76f4\u63a5\u53bb mock ",(0,a.kt)("inlineCode",{parentName:"p"},"React Query")," \u6240\u63d0\u4f9b\u7684 hook \u4f86\u9032\u884c mock api data \u7684\u52d5\u4f5c\uff0c\u76f8\u5c0d\u7684\u975e\u5e38\u4e0d\u76f4\u89ba\u5f88\u591a\uff0c\u6211\u5011\u5e0c\u671b\u50c5 mock \u6211\u5011\u9700\u8981\u7684 api data \u90e8\u5206\uff0c\u800c\u4e0d\u662f\u6574\u500b hook"),(0,a.kt)("p",null,"\u6240\u4ee5\uff0c\u91dd\u5c0d\u4e0a\u8ff0 2 \u500b\u6848\u4f8b\uff0c\u6211\u5011\u5c31\u51fa\u73fe\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"Mock Service Worker")," \u4f86\u5e6b\u6211\u5011\u89e3\u6c7a\u4e0a\u8ff0\u554f\u984c\uff0c\u4ee5\u4e0b\u6703\u91dd\u5c0d\u4e0a\u8ff0 2 \u9ede\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5e38\u5e38\u91cd\u8907 api data mocking"),(0,a.kt)("li",{parentName:"ul"},"\u96e3\u4ee5 mock React Query result")),(0,a.kt)("p",null,"\u4f86\u9032\u884c\u7d30\u90e8\u89e3\u8aaa"),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"\u5e38\u5e38\u91cd\u8907-api-data-mocking"},"\u5e38\u5e38\u91cd\u8907 api data mocking"),(0,a.kt)("p",null,"\u7576\u6211\u5011\u5728 mock api \u6642\uff0c\u6709\u4e00\u4e9b\u554f\u984c\uff0c\u4f8b\u5982\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6e2c\u8a66\u4e0d\u540c\u7684 component \u6642\uff0c\u5047\u8a2d\u7528\u5230\u540c\u4e00\u96bb api\uff0c\u6211\u5011\u6703\u9700\u8981\u91cd\u65b0 mock api\uff0c\n( \u96d6\u7136\u53ef\u4ee5\u628a mock api \u653e\u5728  ",(0,a.kt)("inlineCode",{parentName:"li"},"/__mock__"),"  \u5e95\u4e0b\u4f86\u907f\u514d\u91cd\u8907\u64b0\u5beb\uff0c\u4f46\u662f\u76ee\u524d\u6703\u6709 Typescript \u7684\u578b\u5225\u554f\u984c )"),(0,a.kt)("li",{parentName:"ul"},"\u82e5\u6709\u4e00\u500b custom hook \u6703\u53bb\u6253 api\uff0c\u7576\u6211\u5011\u5728\u6e2c\u8a66 custom hook \u6642\uff0c\u5df2\u7d93\u64b0\u5beb\u4e86\u4e00\u6b21 mock api\uff0c\u7576\u5728\u6e2c\u8a66\u4f7f\u7528\u8a72 custom hook \u7684 component\uff0c\u6211\u5011\u5fc5\u9808\u5728\u6e2c\u8a66\u8a72 component \u6642\u91cd\u65b0\u64b0\u5beb\u4e00\u6b21 mock api\uff0c\u9020\u6210\u7dad\u8b77\u4e0a\u4e0d\u662f\u5f88\u65b9\u4fbf")),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"functional-component"},"Functional component"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Functional component product code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const useUserLocations = () => {\n    const [userLocations, setUserLocations] = useState();\n\n    const fetchUserLocations = async () => {\n        const users = await apiGetUsers();\n        const locations = users.map((user) => user.location);\n        return locations;\n    } \n\n    useEffect(() => {\n        fetchUserLocations()\n            .then((locations) => {\n                setUserLocations(locations);\n            })\n            .catch(...)\n    }, []);\n    \n    return userLocations;\n};\n")),(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Functional component testing code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"describe('useFetchUserLocations', () => {\n    test('by default, should return an array containing users locations', () => {\n        // Arrange\n        apiGetUser.mockResolvedValue([\n            { name: 'Alen', location: 'America' },\n            { name: 'Benson', location: 'Taiwan' },\n            { name: 'Camillie', location: 'French' },\n        ]);\n\n        // Act\n        const { result } = renderHook(() => useFetchUserLocation());\n\n        // Assert\n        expect(result.current).toEqual(['American', 'Taiwan', 'French']);\n    });\n});\n")),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"class-component"},"Class Component"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Class component product code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// component's code & Testing\n\nimport useUserLocations from '@/hooks/useUserLocations';\n\nconst UserStatic = () => {\n    const userLocations = useUserLocations(); // using the hook above\n\n    return (...); // pretended this render a pie chart with label\n};\n")),(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Class component testing code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"describe('UserStatic', () => {\n    test('when users exist and have locations, should show location label', () => {\n        // Arrange\n        apiGetUser.mockResolvedValue([\n            { name: 'Alen', location: 'America' },\n            { name: 'Benson', location: 'Taiwan' },\n            { name: 'Camillie', location: 'French' },\n        ]); // mock the same value again !!\n\n        // Act\n        const { getByTestId } = render(<UserStatic />);\n        const labelAmerica = getByTestId('label-America');\n\n        // Assert\n        expect(labelAmerica).toBeVisible();\n    });\n});\n")),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u4e0a\u8ff0\u662f\u6211\u5011\u5728\u5c0d hook \u548c component \u8981\u505a mock api data \u7684\u90e8\u5206\uff0c\u5982\u679c\u6bcf\u500b test case \u90fd\u9700\u8981\u9019\u6a23\u91cd\u8907\u64b0\u5beb api data\uff0c\u5247\u6703\u8b8a\u5f97\u975e\u5e38\u7e41\u7463"),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"\u554f\u984c\u96e3\u4ee5-mock-react-query-data"},"\u554f\u984c\uff1a\u96e3\u4ee5 mock ",(0,a.kt)("inlineCode",{parentName:"h2"},"React Query")," data"),(0,a.kt)("p",null,"\u6211\u5728\u7814\u7a76\u5982\u4f55\u6e2c\u8a66 React Query \u7684\u6642\uff0c\u767c\u73fe React Query \u5176\u5be6\u6c92\u90a3\u9ebc\u597d\u6e2c\u8a66\uff0c\u56e0\u70ba\u4ed6\u5df2\u7d93\u662f\u4e00\u500b\u5c01\u88dd\u597d\u7684 hook\uff0c\u5167\u90e8\u6709\u5f88\u591a\u6211\u4e0d\u6e05\u695a\u7684\u5be6\u73fe\u65b9\u5f0f\uff0c\u60f3\u8981\u5229\u7528 mock axios \u7684\u65b9\u5f0f\u4f86\u5c0d\u4f7f\u7528 React Query \u7684\u5de5\u4f5c\u55ae\u4f4d\u4f86\u505a\u6e2c\u8a66\u4e5f\u6c92\u9019\u9ebc\u5bb9\u6613\uff0c\u901a\u5e38\u9700\u8981\u4e0d\u5c11\u5947\u6deb\u6280\u5de7"),(0,a.kt)("p",null,"\u6211\u82b1\u4e86\u4e00\u756a\u6642\u9593\u7814\u7a76\u5f8c\uff0c\u5ffd\u7136\u767c\u73fe\u4e00\u7bc7\u6587\u7ae0( ",(0,a.kt)("a",{parentName:"p",href:"https://kentcdodds.com/blog/stop-mocking-fetch"},"Stop mocking fetch by Kent C. Dodds")," )\u6709\u5beb\u5230\u5982\u4f55\u89e3\u6c7a\u9019\u554f\u984c\uff0c\u5c31\u662f\u8207\u5176\u5728\u6e2c\u8a66\u6a94\u6848\u4e00\u6b21\u6b21\u7684\u64b0\u5beb mock api\uff0c\u6211\u5011\u5176\u5be6\u53ef\u4ee5\u53bb\u507d\u9020\u6574\u500b api service !!!"),(0,a.kt)("p",null,"\u6211\u5011\u5c31\u53ef\u4ee5\u8b93\u6211\u5011\u7684 unit test \u771f\u7684\u53bb\u6253 api\uff0c\u4f46\u662f\u6253\u7684\u662f mock service worker \u63d0\u4f9b\u7684 api\uff0c\u800c\u9019\u4e9b\u5047\u7684 service \u6703\u96c6\u4e2d\u7ba1\u7406\u9019\u4e9b api\uff0c\u9019\u6a23\u53ef\u4ee5\u907f\u514d\u6211\u5011\u591a\u6b21\u5728\u6e2c\u8a66\u6a94\u5beb mock api\uff0c\u4e5f\u65b9\u4fbf\u6211\u5011\u7d71\u4e00\u7ba1\u7406\u6240\u6709\u7684\u5047 api"),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"msw-\u7c21\u4ecb"},"MSW \u7c21\u4ecb"),(0,a.kt)("p",null,"MSW \u7684\u5168\u540d\u662f Mock Service Worker\uff0c\u5c31\u662f\u53ef\u4ee5\u8b93\u6211\u5011\u507d\u9020 service worker\uff0c\u8b93\u6211\u5011\u7684\u6e2c\u8a66\u7a0b\u5f0f\u78bc\u53ef\u4ee5\u4f9d\u7167\u539f\u672c\u7684\u6d41\u7a0b\u53bb\u6253 api\uff0c\u4f46\u6703\u88ab msw \u8655\u7406\uff0c\u800c\u56de\u50b3\u6211\u5011\u81ea\u5df1\u507d\u9020\u7684\u7d50\u679c"),(0,a.kt)("p",null,"\u8a2d\u5b9a\u65b9\u6cd5\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { rest } from 'msw' // msw supports graphql too!\nimport * as users from './users'\n\nconst handlers = [\n  rest.get('/users', async (req, res, ctx) => {\n    const users = [\n        { name: 'Alen', location: 'America' },\n        { name: 'Benson', location: 'Taiwan' },\n        { name: 'Camillie', location: 'French' },\n    ];\n    return res(ctx.json(users));\n  }),\n  rest.post('/users', async (req, res, ctx) => {\n    if (req.name && req.email && req.location) {\n        return res(\n            ctx.staus(200)\n            ctx.json({ success: true })\n        );\n    }\n  }),\n];\n\nexport { handlers };\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// test/server.js\nimport { rest } from 'msw'\nimport { setupServer } from 'msw/node'\nimport { handlers } from './server-handlers'\n\nconst server = setupServer(...handlers)\nexport { server, rest };\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// test/setup-env.js\n// add this to your setupFilesAfterEnv config in jest so it's imported for every test file\nimport {server} from './server.js'\n\nbeforeAll(() => server.listen())\n// if you need to add a handler after calling setupServer for some specific test\n// this will remove that handler for the rest of them\n// (which is important for test isolation):\nafterEach(() => server.resetHandlers())\nafterAll(() => server.close())\n")),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u800c\u4e14 msw \u66f4\u5927\u7684\u597d\u8655\u662f\uff0c\u56e0\u70ba\u5167\u90e8\u5be6\u4f5c\u662f\u9760 msw \u4f5c\u8005\u81ea\u5df1\u53bb\u8986\u5beb\u6389\u6574\u500b Node.js \u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"fetch"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"axios")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"XMLHttpRequest"),"\uff0c\n\u4e0d\u662f\u771f\u7684\u67b6\u4e00\u500b mock server\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5728 CICD \u7684\u6d41\u7a0b\uff0c\u4e0d\u9700\u8981\u53e6\u5916\u8a2d\u5b9a"),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"\u4f7f\u7528-msw-\u6703\u9047\u5230\u7684\u554f\u984c"},"\u4f7f\u7528 MSW \u6703\u9047\u5230\u7684\u554f\u984c"),(0,a.kt)("p",null,"\u7576\u6211\u5011\u5728\u64b0\u5beb\u6e2c\u8a66\u6642\uff0c\u6709\u6642\u5019\u6703\u5e0c\u671b\u6211\u5011\u547c\u53eb api \u6642\u6709\u6c92\u6709\u5e36\u6b63\u78ba\u7684\u53c3\u6578"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const useUser = (userUuid) => {\n    const [userLocations, setUserLocations] = useState();\n\n    const fetchUser = async () => {\n        const user = await apiGetUser(userUuid);\n        return user;\n    };\n\n    useEffect(() => {\n        fetchUserLocations()\n            .then((locations) => {\n                setUserLocations(locations);\n            })\n            .catch(...)\n    }, []);\n    \n    return userLocations;\n};\n\nconst apiGetUser = jest.fn();\n\ntest('when passed user uuid, should call apiGetUser with the same user uuid', () => {\n    // Act\n    const { result } = render(() => useUser('mockUserUuid'));\n\n    // Assert\n    expect(apiGetUser).toHaveBeenCalledWith('mockUserUuid');\n});\n")),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u4f46\u5728\u4f7f\u7528 mock service worker \u6642\uff0c\u6211\u5011\u4e0d\u9700\u8981\u53bb mock api function\uff0c\n\u6240\u4ee5\u6211\u5011\u7121\u6cd5\u76e3\u63a7 api function \u88ab\u547c\u53eb\u6642\u4ee3\u5165\u7684\u53c3\u6578\uff0c\u9019\u6642\u6211\u5011\u8981\u600e\u9ebc\u6e2c\u8a66\u5462\uff1f"),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u5176\u5be6\u5c31\u662f\u8ddf\u771f\u5be6\u5f8c\u7aef\u5728\u505a\u7684\u6642\u4e00\u6a23\uff01 \u5c07\u4e0d\u540c\u7684\u8f38\u5165\u503c\u56de\u50b3\u4e0d\u540c\u7684\u8f38\u5165\u7d50\u679c\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { rest } from 'msw' // msw supports graphql too!\nimport * as users from './users'\n\nconst handlers = [\n  rest.get('/user/:uuid', async (req, res, ctx) => {\n\n    if (req.uuid) {\n        const user = {\n            name: 'Alen',\n            email: 'alen@gmail.com',\n            location: 'America',\n        };\n        return res(\n            ctx.status(200),\n            ctx.json(user)\n        )\n    } else {\n        return res(\n            ctx.status(404),\n            ctx.json({ error: 'User not found' }),\n        )\n    }\n  }),\n];\n\nexport { handlers };\n")),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u6240\u4ee5\uff0c\u6211\u5011\u61c9\u8a72",(0,a.kt)("strong",{parentName:"p"},"\u91cd\u65b0\u601d\u8003\u6211\u5011\u507d\u9020 api \u7684\u76ee\u7684"),"\uff0c\u8b93\u6e2c\u8a66\u66f4\u50cf\u6211\u5011\u771f\u5be6\u4f7f\u7528\u7684\u60c5\u5883\uff0c\u7528 msw \u5c31\u4e0d\u6703\u611f\u89ba\u53d7\u5230\u7d04\u675f\u548c\u4e0d\u81ea\u7531\u4e86"),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"\u8f15\u9b06\u6e2c\u8a66-react-query"},"\u8f15\u9b06\u6e2c\u8a66 ",(0,a.kt)("inlineCode",{parentName:"h2"},"React Query")),(0,a.kt)("p",null,"\u53e6\u5916\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6700\u8fd1\u6709\u65b0\u7684 fetch api \u7684\u6a5f\u5236\uff0c\u7a31\u4f5c swr (stale while revalidate)\uff0c\u50cf\u662f\u6700\u8fd1\u6bd4\u8f03\u706b\u7d05\u7684"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"React Query"),(0,a.kt)("li",{parentName:"ul"},"RTK Query"),(0,a.kt)("li",{parentName:"ul"},"SWR")),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u90fd\u662f\u63a1\u7528\u9019\u7a2e\u6a5f\u5236\uff0c\u4e14\u4f7f\u7528\u4e0a\u90fd\u662f\u7528 hook \u5c01\u88dd\u8d77\u4f86\u5f8c\u53bb\u6253 api\uff0c\u5df2\u7d93\u4e0d\u518d\u662f\u55ae\u7d14\u7684 api function \u4e86\uff0c\u6211\u5011\u5c31\u8981\u91dd\u5c0d hook \u53bb\u505a mocking\uff0c\u4e26\u4e0d\u662f\u4e00\u500b\u5f88\u7406\u60f3\u7684\u65b9\u5f0f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// Testing with swr by manual mock hook\n\nimport useSWR from 'swr';\nimport { render } from '@/utils/testing/render';\n\nimport UserStatic, { idUserNumber } from './_userStatic';\n\njest.mock('swr', () => jest.fn());\n\ndescribe('UserStatic', () => {\n    test('when users data exist, should show correct users number', async () => {\n        // Arrange\n        const users = [\n            { name: 'Alen', email: 'alen@trendmicro.com', },\n            { name: 'Benson', email: 'benson@trendmicro.com' },\n            { name: 'Camillie', email: 'camillie@trendmicro.com' },\n        ];\n    \n        useSWR.mockResolvedValueOnce({\n            data: users,\n            isLoading: false,\n        });\n      \n        // Act\n        const { findByTestId } = render(<UserStatic />);\n        const userNumber = await findByTestId(idUserNumber);\n      \n        // Assert\n        expect(userNumber).toHaveTextContent('3');\n    });\n});\n")),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u82e5\u6211\u5011\u4f7f\u7528 msw \u53bb mock api service \u7684\u8a71\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u8ddf\u4e00\u822c mock api \u7684\u65b9\u5f0f\u4e00\u6a23\uff0c\n\u800c\u4e0d\u7528\u53bb\u7279\u5225 mock msw \u4e86"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// handlers.js\n\nimport { rest } from 'msw';\n\nexport const handlers = [\n    rest.get('/users/:uuid', (req, res, ctx) => {\n        const users = [\n            { name: 'Alen', email: 'alen@trendmicro.com', },\n            { name: 'Benson', email: 'benson@trendmicro.com' },\n            { name: 'Camillie', email: 'camillie@trendmicro.com' },\n        ];\n    \n        return res(\n            ctx.status(200),\n            ctx.json(users),\n        );\n    }),\n];\n\nexport default {};\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// Testing with swr by manual mock hook\n\nimport useSWR from 'swr';\nimport { render } from '@/utils/testing/render';\nimport UserStatic, { idUserNumber } from './_userStatic';\n\n\njest.mock('swr', () => jest.fn());\n\n\ndescribe('UserStatic', () => {\n    test('when users data exist, should show correct users number', async () => {\n        // Act\n        const { findByTestId } = render(<UserStatic />);\n        const userNumber = await findByTestId(idUserNumber);\n      \n        // Assert\n        expect(userNumber).toHaveTextContent('3');\n    });\n});\n")),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"\u7d50\u8ad6"},"\u7d50\u8ad6"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6211\u5011\u53ef\u4ee5\u5229\u7528 msw \u4f86\u89e3\u6c7a\u5e38\u5e38\u9700\u8981\u91cd\u8907 mock api response \u7684\u554f\u984c\uff0c\u589e\u52a0 ",(0,a.kt)("strong",{parentName:"li"},"\u53ef\u7dad\u8b77\u6027")),(0,a.kt)("li",{parentName:"ul"},"msw \u4e5f\u53ef\u4ee5\u5e6b\u6211\u5011\u8f15\u9b06\u7684\u8655\u7406 React Query \u7684\u6e2c\u8a66\uff0c\u4e0d\u7528\u53bb\u53e6\u5916 mock ",(0,a.kt)("inlineCode",{parentName:"li"},"useQuery")," hook")),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"\u53c3\u8003\u8cc7\u6e90"},"\u53c3\u8003\u8cc7\u6e90"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kentcdodds.com/blog/stop-mocking-fetch"},"Kent C. Dodds - Stop mocking fetch")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://mswjs.io/"},"msw"))),(0,a.kt)("br",null))}p.isMDXComponent=!0}}]);