"use strict";(self.webpackChunkbenson_doc=self.webpackChunkbenson_doc||[]).push([[2147],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,k=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(k,s(s({ref:t},i),{},{components:n})):r.createElement(k,s({ref:t},i))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},125:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1.4,sidebar_label:"[Chat App] Interface",title:"[Chat App] Interface",tags:["Chat System","Interface"]},s=void 0,l={unversionedId:"Plan/chat-system-interface",id:"Plan/chat-system-interface",title:"[Chat App] Interface",description:"Here are the interfaces with the backend server.",source:"@site/docs/Plan/chat-system-interface.mdx",sourceDirName:"Plan",slug:"/Plan/chat-system-interface",permalink:"/docs/Plan/chat-system-interface",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Plan/chat-system-interface.mdx",tags:[{label:"Chat System",permalink:"/docs/tags/chat-system"},{label:"Interface",permalink:"/docs/tags/interface"}],version:"current",lastUpdatedAt:1750006365,formattedLastUpdatedAt:"Jun 15, 2025",sidebarPosition:1.4,frontMatter:{sidebar_position:1.4,sidebar_label:"[Chat App] Interface",title:"[Chat App] Interface",tags:["Chat System","Interface"]},sidebar:"tutorialSidebar",previous:{title:"[Chat App] Data Structure",permalink:"/docs/Plan/chat-system-data-structure"},next:{title:"[Chat App] Optimization",permalink:"/docs/Plan/chat-system-optimization"}},c={},p=[{value:"HTTP API endpoints",id:"http-api-endpoints",level:2},{value:"1. <code>GET /users</code>",id:"1-get-users",level:3},{value:"2. <code>POST /users</code>",id:"2-post-users",level:3},{value:"3. <code>GET /rooms/{room_id}/messages</code>",id:"3-get-roomsroom_idmessages",level:3},{value:"WebSocket action endpoints",id:"websocket-action-endpoints",level:2},{value:"4. <code>create_room</code>",id:"4-create_room",level:3},{value:"5. <code>create_message</code>",id:"5-create_message",level:3},{value:"Reference",id:"reference",level:2}],i={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Here are the interfaces with the backend server."),(0,a.kt)("h2",{id:"http-api-endpoints"},"HTTP API endpoints"),(0,a.kt)("h3",{id:"1-get-users"},"1. ",(0,a.kt)("inlineCode",{parentName:"h3"},"GET /users")),(0,a.kt)("p",null,"Get the users you can create a new room with."),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Payload"),"\uff1aNone ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Response"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": "user_123",\n    "name": "Alice",\n    "avatar": "https://example.com/avatar/alice.png"\n  },\n  {\n    "id": "user_456",\n    "name": "Bob",\n    "avatar": "https://example.com/avatar/bob.png"\n  }\n]\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"2-post-users"},"2. ",(0,a.kt)("inlineCode",{parentName:"h3"},"POST /users")),(0,a.kt)("p",null,"Create a new user"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Payload"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Alice",\n  "avatar": "https://example.com/avatar/alice.png"\n}\n')),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Response"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "user_123",\n  "name": "Alice",\n  "avatar": "https://example.com/avatar/alice.png"\n}\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"3-get-roomsroom_idmessages"},"3. ",(0,a.kt)("inlineCode",{parentName:"h3"},"GET /rooms/{room_id}/messages")),(0,a.kt)("p",null,"Get the messages of the room"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Payload"),"\uff1aNone (only ",(0,a.kt)("inlineCode",{parentName:"p"},"room_id")," param) ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Response"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "roomId": "room_456",\n    "messageId": "msg_001",\n    "content": "Hello!",\n    "senderId": "user_123",\n    "createdAt": "2024-06-16T12:34:56.789Z",\n    "status": "success"\n  },\n  {\n    "roomId": "room_456",\n    "messageId": "msg_002",\n    "content": "Hi!",\n    "senderId": "user_456",\n    "createdAt": "2024-06-16T12:35:12.000Z",\n    "status": "success"\n  }\n]\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"websocket-action-endpoints"},"WebSocket action endpoints"),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"4-create_room"},"4. ",(0,a.kt)("inlineCode",{parentName:"h3"},"create_room")),(0,a.kt)("p",null,"The reason we use websocket is to notify a new room to users which is not in the room but online,\nwhich can be replaced by HTTP API + SSE to notify other not in-room users."),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Payload"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "action": "create_room",\n  "participants": ["user_123", "user_456"]\n}\n')),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Server Response"),"\uff08broadcast to participants\uff09\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "room_created",\n  "room": {\n    "id": "room_456",\n    "participants": [\n      { "id": "user_123", "name": "Alice" },\n      { "id": "user_456", "name": "Bob" }\n    ],\n    "createdAt": "2024-06-16T12:36:00.000Z"\n  }\n}\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"5-create_message"},"5. ",(0,a.kt)("inlineCode",{parentName:"h3"},"create_message")),(0,a.kt)("p",null,"Create a new message by a user to notify other users in the room."),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Payload"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "action": "create_message",\n  "roomId": "room_456",\n  "messageId": "msg_003",  // client-generated UUID\n  "content": "How are you?",\n  "senderId": "user_123",\n  "createdAt": "2024-06-16T12:36:10.000Z"\n}\n')),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Server Response"),"\uff08broadcast to all users in the room\uff09\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "message_created",\n  "message": {\n    "roomId": "room_456",\n    "messageId": "msg_003",\n    "content": "How are you?",\n    "senderId": "user_123",\n    "createdAt": "2024-06-16T12:36:10.000Z",\n    "status": "success"\n  }\n}\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"GreatFrontend - Chat App")),(0,a.kt)("br",null),(0,a.kt)("br",null))}m.isMDXComponent=!0}}]);